// src/data-source.ts

import 'dotenv/config';
import { DataSource } from 'typeorm';

import { User } from './entities/user.entity';
import { Equipment } from './entities/equipment.entity';
import { Request } from './entities/request.entity';
import { Comment } from './entities/comment.entity';
import { Notification } from './entities/notification.entity';
import { Software } from './entities/software.entity';
import { News } from './entities/news.entity';
import { Guide } from './entities/guide.entity';
import { RequestCategory } from './entities/request-category.entity';
import { RequestPriority } from './entities/request-priority.entity';

export const AppDataSource = new DataSource({
  type: 'postgres',
  url: process.env.DATABASE_URL,           // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
  schema: 'public',                         // ‚úÖ –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ö–µ–º—É
  synchronize: false,                       // ‚ùó –ù–∏–∫–æ–≥–¥–∞ –Ω–µ true –≤ production
  logging: process.env.NODE_ENV !== 'production', // üîç –í dev –≤–∫–ª—é—á–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  entities: [
    User,
    Equipment,
    Request,
    Comment,
    Notification,
    Software,
    News,
    Guide,
    RequestCategory,
    RequestPriority,
  ],
  migrations: ['dist/migrations/*.js'],     // üîÅ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
  subscribers: [],                          // üîî –ï—Å–ª–∏ –±—É–¥—É—Ç –Ω—É–∂–Ω—ã —Å–æ–±—ã—Ç–∏—è
});
