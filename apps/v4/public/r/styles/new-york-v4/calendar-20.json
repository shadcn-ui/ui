{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "calendar-20",
  "type": "registry:block",
  "description": "With time presets",
  "registryDependencies": [
    "calendar",
    "card",
    "button"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/blocks/calendar-20.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nimport { Button } from \"@/registry/new-york-v4/ui/button\"\r\nimport { Calendar } from \"@/registry/new-york-v4/ui/calendar\"\r\nimport { Card, CardContent, CardFooter } from \"@/registry/new-york-v4/ui/card\"\r\n\r\nexport default function Calendar20() {\r\n  const [date, setDate] = React.useState<Date | undefined>(\r\n    new Date(2025, 5, 12)\r\n  )\r\n  const [selectedTime, setSelectedTime] = React.useState<string | null>(\"10:00\")\r\n  const timeSlots = Array.from({ length: 37 }, (_, i) => {\r\n    const totalMinutes = i * 15\r\n    const hour = Math.floor(totalMinutes / 60) + 9\r\n    const minute = totalMinutes % 60\r\n    return `${hour.toString().padStart(2, \"0\")}:${minute.toString().padStart(2, \"0\")}`\r\n  })\r\n\r\n  const bookedDates = Array.from(\r\n    { length: 3 },\r\n    (_, i) => new Date(2025, 5, 17 + i)\r\n  )\r\n\r\n  return (\r\n    <Card className=\"gap-0 p-0\">\r\n      <CardContent className=\"relative p-0 md:pr-48\">\r\n        <div className=\"p-6\">\r\n          <Calendar\r\n            mode=\"single\"\r\n            selected={date}\r\n            onSelect={setDate}\r\n            defaultMonth={date}\r\n            disabled={bookedDates}\r\n            showOutsideDays={false}\r\n            modifiers={{\r\n              booked: bookedDates,\r\n            }}\r\n            modifiersClassNames={{\r\n              booked: \"[&>button]:line-through opacity-100\",\r\n            }}\r\n            className=\"bg-transparent p-0 [--cell-size:--spacing(10)] md:[--cell-size:--spacing(12)]\"\r\n            formatters={{\r\n              formatWeekdayName: (date) => {\r\n                return date.toLocaleString(\"en-US\", { weekday: \"short\" })\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"no-scrollbar inset-y-0 right-0 flex max-h-72 w-full scroll-pb-6 flex-col gap-4 overflow-y-auto border-t p-6 md:absolute md:max-h-none md:w-48 md:border-t-0 md:border-l\">\r\n          <div className=\"grid gap-2\">\r\n            {timeSlots.map((time) => (\r\n              <Button\r\n                key={time}\r\n                variant={selectedTime === time ? \"default\" : \"outline\"}\r\n                onClick={() => setSelectedTime(time)}\r\n                className=\"w-full shadow-none\"\r\n              >\r\n                {time}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n      <CardFooter className=\"flex flex-col gap-4 border-t px-6 !py-5 md:flex-row\">\r\n        <div className=\"text-sm\">\r\n          {date && selectedTime ? (\r\n            <>\r\n              Your meeting is booked for{\" \"}\r\n              <span className=\"font-medium\">\r\n                {\" \"}\r\n                {date?.toLocaleDateString(\"en-US\", {\r\n                  weekday: \"long\",\r\n                  day: \"numeric\",\r\n                  month: \"long\",\r\n                })}{\" \"}\r\n              </span>\r\n              at <span className=\"font-medium\">{selectedTime}</span>.\r\n            </>\r\n          ) : (\r\n            <>Select a date and time for your meeting.</>\r\n          )}\r\n        </div>\r\n        <Button\r\n          disabled={!date || !selectedTime}\r\n          className=\"w-full md:ml-auto md:w-auto\"\r\n          variant=\"outline\"\r\n        >\r\n          Continue\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "iframeHeight": "600px",
    "container": "w-full bg-surface min-h-svh flex px-6 py-12 items-start justify-center min-w-0",
    "mobile": "component"
  },
  "categories": [
    "calendar",
    "date"
  ]
}