{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/new-york-v4/ui/field.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Separator } from \"@/registry/new-york-v4/ui/separator\"\n\nconst fieldGroupVariants = cva(\"group/field-group flex flex-col gap-7\", {\n  variants: {\n    variant: {\n      default: \"*:data-[slot=field-group]:gap-4\",\n      outline: \"border border-input rounded-lg p-6 gap-6 bg-background\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nfunction FieldGroup({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof fieldGroupVariants>) {\n  return (\n    <div\n      data-slot=\"field-group\"\n      data-variant={variant}\n      className={cn(fieldGroupVariants({ variant, className }))}\n      {...props}\n    />\n  )\n}\n\nfunction Field({\n  className,\n  orientation = \"vertical\",\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  orientation?: \"vertical\" | \"horizontal\"\n  asChild?: boolean\n}) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"field\"\n      data-orientation={orientation}\n      className={cn(\n        \"group flex w-full gap-3\",\n        \"data-[orientation=vertical]:flex-col data-[orientation=vertical]:items-start\",\n        \"data-[orientation=horizontal]:flex-row data-[orientation=horizontal]:items-center data-[orientation=horizontal]:has-[[data-slot=field-description]]:items-start\",\n        \"*:data-[slot=label]:w-fit\",\n        \"*:data-[slot=field-description]:-mt-1\",\n        \"*:data-[slot=input]:w-full data-[orientation=horizontal]:*:data-[slot=input]:w-fit\",\n        \"*:data-[slot=toggle-group]:w-full\",\n        \"*:data-[slot=switch]:last:ml-auto\",\n        \"*:data-[slot=checkbox]:last:ml-auto\",\n        \"*:data-[slot=radio-group-item]:last:ml-auto\",\n        \"*:data-[slot=select-trigger]:w-full *:data-[slot=select-trigger]:last:ml-auto data-[orientation=horizontal]:*:data-[slot=select-trigger]:w-fit\",\n        \"*:data-[slot=radio-group]:w-full\",\n        \"*:data-[slot=slider]:w-full *:data-[slot=slider]:last:ml-auto data-[orientation=horizontal]:*:data-[slot=slider]:w-32\",\n        \"*:data-[slot=input]:last:ml-auto\",\n        \"has-data-[slot=slider]:gap-4 has-data-[slot=slider]:*:data-[slot=field-description]:last:mt-0\",\n        \"has-[>*[data-slot=radio-group-item]]:gap-2 [&:not([class*='items-']):has(>*[data-slot=radio-group-item])]:items-center\",\n        \"has-[>*[data-slot=checkbox]]:gap-2 [&:not([class*='items-']):has(>*[data-slot=checkbox])]:items-center\",\n        \"has-[>*[data-slot=switch]]:gap-2.5 [&:not([class*='items-']):has(>*[data-slot=switch])]:items-center\",\n        \"data-[invalid=true]:*:data-[slot=label]:text-destructive data-[invalid=true]:*:data-[slot=field-description]:text-destructive data-[invalid=true]:*:data-[slot=popover-trigger]:border-destructive data-[invalid=true]:*:data-[slot=popover-trigger]:ring-destructive/20 dark:data-[invalid=true]:*:data-[slot=popover-trigger]:ring-destructive/40\",\n        \"[&label]:has-data-[state=checked]:bg-primary/5 dark:[&label]:has-data-[state=checked]:bg-primary/10 [&label]:has-data-[state=checked]:border-ring [&label]:rounded-md [&label]:border [&label]:p-4 [&label]:**:data-[slot=field-description]:mb-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  return (\n    <p\n      data-slot=\"field-description\"\n      className={cn(\n        \"text-muted-foreground text-sm font-normal\",\n        \"[[data-slot=label]+&]:-mt-2 [[data-slot=label]+&]:mb-1\",\n        \"has-[+[data-slot=slider]]:-mt-2\",\n        \"*:[a]:hover:text-primary *:[a]:underline *:[a]:underline-offset-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldSet({ className, ...props }: React.ComponentProps<\"fieldset\">) {\n  return (\n    <fieldset\n      data-slot=\"field-set\"\n      className={cn(\"flex flex-col gap-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FieldLegend({ className, ...props }: React.ComponentProps<\"legend\">) {\n  return (\n    <legend\n      data-slot=\"field-legend\"\n      className={cn(\n        \"mb-6 text-base font-medium has-[+[data-slot=field-description]]:mb-1\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldSeparator({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  children?: React.ReactNode\n}) {\n  return (\n    <div\n      data-slot=\"field-separator\"\n      data-content={!!children}\n      className={cn(\n        \"relative -my-4 h-5 text-sm group-data-[variant=outline]/field-group:-mb-2 data-[content=true]:-my-2\",\n        className\n      )}\n      {...props}\n    >\n      <Separator className=\"absolute inset-0 top-1/2\" />\n      {children && (\n        <span className=\"bg-background text-muted-foreground relative mx-auto block w-fit px-2\">\n          {children}\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport {\n  Field,\n  FieldDescription,\n  FieldGroup,\n  FieldLegend,\n  FieldSeparator,\n  FieldSet,\n}\n",
      "type": "registry:ui"
    }
  ]
}