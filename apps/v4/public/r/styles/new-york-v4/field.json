{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/new-york-v4/ui/field.tsx",
      "content": "import { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/registry/new-york-v4/ui/label\"\nimport { Separator } from \"@/registry/new-york-v4/ui/separator\"\n\nfunction FieldSet({ className, ...props }: React.ComponentProps<\"fieldset\">) {\n  return (\n    <fieldset\n      data-slot=\"field-set\"\n      className={cn(\"flex flex-col gap-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FieldLegend({ className, ...props }: React.ComponentProps<\"legend\">) {\n  return (\n    <legend\n      data-slot=\"field-legend\"\n      className={cn(\n        \"mb-6 text-base font-medium has-[+[data-slot=field-description]]:mb-1\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nconst fieldGroupVariants = cva(\"group/field-group flex flex-col gap-7\", {\n  variants: {\n    variant: {\n      default: \"[&>[data-slot=field-group]]:gap-4\",\n      outline: \"border border-input rounded-lg p-6 gap-6 bg-background\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nfunction FieldGroup({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof fieldGroupVariants>) {\n  return (\n    <div\n      data-slot=\"field-group\"\n      data-variant={variant}\n      className={cn(fieldGroupVariants({ variant, className }))}\n      {...props}\n    />\n  )\n}\n\nfunction Field({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"field\"\n      className={cn(\n        \"group/field flex w-full flex-col items-start gap-3\",\n\n        // Label + input alignment\n        \"has-[>[data-slot=checkbox]]:flex-row\",\n        \"has-[>[data-slot=radio-group-item]]:flex-row\",\n        \"has-[>[data-slot=switch]]:flex-row\",\n\n        \"has-[label+[data-slot=checkbox]]:[&>:first-child]:flex-1\",\n        \"has-[label+[data-slot=radio-group-item]]:[&>:first-child]:flex-1\",\n        \"has-[label+[data-slot=switch]]:[&>:first-child]:flex-1\",\n\n        \"has-[[data-slot=field-title]+[data-slot=checkbox]]:[&>:first-child]:flex-1\",\n        \"has-[[data-slot=field-title]+[data-slot=radio-group-item]]:[&>:first-child]:flex-1\",\n        \"has-[[data-slot=field-title]+[data-slot=switch]]:[&>:first-child]:flex-1\",\n\n        // Child inputs (direct children only)\n        \"[&>[data-slot=label]]:w-fit\",\n        \"[&>[data-slot=toggle-group]]:w-full\",\n        \"[&>[data-slot=input]]:w-full\",\n        \"[&>[data-slot=select-trigger]]:w-full\",\n        \"[&>[data-slot=slider]]:w-full\",\n        \"[&>[data-slot=radio-group]]:w-full\",\n\n        // Invalid state handling\n        \"data-[invalid=true]:[&>[data-slot=label]]:text-destructive\",\n        \"data-[invalid=true]:[&>[data-slot=field-description]]:text-destructive\",\n        \"data-[invalid=true]:[&>[data-slot=popover-trigger]]:border-destructive\",\n        \"data-[invalid=true]:[&>[data-slot=popover-trigger]]:ring-destructive/20\",\n        \"dark:data-[invalid=true]:[&>[data-slot=popover-trigger]]:ring-destructive/40\",\n\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"field-content\"\n      className={cn(\n        \"flex flex-1 flex-col gap-2 [[data-slot=field-label]_&]:gap-1.5\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof Label>) {\n  return (\n    <Label\n      data-slot=\"field-label\"\n      className={cn(\n        \"group/field-label flex items-start gap-2\",\n\n        // Direct Children.\n        \"*:data-[slot=field]:p-4\",\n        \"*:[img]:rounded-t-md\",\n\n        // Child field variations.\n        \"has-[>[data-slot=field]]:w-full has-[>[data-slot=field]]:flex-col has-[>[data-slot=field]]:rounded-md has-[>[data-slot=field]]:border\",\n\n        // Check state.\n        \"has-data-[state=checked]:bg-primary/5 has-data-[state=checked]:border-ring dark:has-data-[state=checked]:bg-primary/10\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"field-title\"\n      className={cn(\n        \"group-has-aria-invalid/field:text-destructive flex items-center gap-2 text-sm leading-none font-medium select-none group-has-data-[disabled]/field:opacity-60\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  return (\n    <p\n      data-slot=\"field-description\"\n      className={cn(\n        \"text-muted-foreground text-sm font-normal has-[+[data-slot=slider]]:-mt-2 [[data-slot=label]+&]:-mt-0.5\",\n        \"[&>a:hover]:text-primary [&>a]:underline [&>a]:underline-offset-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction FieldSeparator({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  children?: React.ReactNode\n}) {\n  return (\n    <div\n      data-slot=\"field-separator\"\n      data-content={!!children}\n      className={cn(\n        \"relative -my-4 h-5 text-sm group-data-[variant=outline]/field-group:-mb-2 data-[content=true]:-my-2\",\n        className\n      )}\n      {...props}\n    >\n      <Separator className=\"absolute inset-0 top-1/2\" />\n      {children && (\n        <span className=\"bg-background text-muted-foreground relative mx-auto block w-fit px-2\">\n          {children}\n        </span>\n      )}\n    </div>\n  )\n}\n\nfunction FieldError({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"field-error\"\n      className={cn(\"text-destructive text-sm font-normal\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Field,\n  FieldLabel,\n  FieldDescription,\n  FieldError,\n  FieldGroup,\n  FieldLegend,\n  FieldSeparator,\n  FieldSet,\n  FieldContent,\n  FieldTitle,\n}\n",
      "type": "registry:ui"
    }
  ]
}