{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard-01",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "A dashboard with sidebar, charts and data table.",
  "dependencies": [
    "@dnd-kit/core",
    "@dnd-kit/modifiers",
    "@dnd-kit/sortable",
    "@dnd-kit/utilities",
    "@tanstack/react-table",
    "zod"
  ],
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "label",
    "chart",
    "card",
    "select",
    "tabs",
    "table",
    "toggle-group",
    "badge",
    "button",
    "checkbox",
    "dropdown-menu",
    "drawer",
    "input",
    "avatar",
    "sheet",
    "sonner"
  ],
  "files": [
    {
      "path": "blocks/dashboard-01/page.tsx",
      "content": "import { AppSidebar } from \"@/registry/new-york/blocks/dashboard-01/components/app-sidebar\"\r\nimport { ChartAreaInteractive } from \"@/registry/new-york/blocks/dashboard-01/components/chart-area-interactive\"\r\nimport { DataTable } from \"@/registry/new-york/blocks/dashboard-01/components/data-table\"\r\nimport { SectionCards } from \"@/registry/new-york/blocks/dashboard-01/components/section-cards\"\r\nimport { SiteHeader } from \"@/registry/new-york/blocks/dashboard-01/components/site-header\"\r\nimport { SidebarInset, SidebarProvider } from \"@/registry/new-york/ui/sidebar\"\r\n\r\nimport data from \"./data.json\"\r\n\r\nexport default function Page() {\r\n  return (\r\n    <SidebarProvider>\r\n      <AppSidebar variant=\"inset\" />\r\n      <SidebarInset>\r\n        <SiteHeader />\r\n        <div className=\"flex flex-1 flex-col\">\r\n          <div className=\"@container/main flex flex-1 flex-col gap-2\">\r\n            <div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\r\n              <SectionCards />\r\n              <div className=\"px-4 lg:px-6\">\r\n                <ChartAreaInteractive />\r\n              </div>\r\n              <DataTable data={data} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SidebarInset>\r\n    </SidebarProvider>\r\n  )\r\n}\r\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/dashboard-01/data.json",
      "content": "[\r\n  {\r\n    \"id\": 1,\r\n    \"header\": \"Cover page\",\r\n    \"type\": \"Cover page\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"18\",\r\n    \"limit\": \"5\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"header\": \"Table of contents\",\r\n    \"type\": \"Table of contents\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"29\",\r\n    \"limit\": \"24\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"header\": \"Executive summary\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"10\",\r\n    \"limit\": \"13\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"header\": \"Technical approach\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"27\",\r\n    \"limit\": \"23\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"header\": \"Design\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"2\",\r\n    \"limit\": \"16\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"header\": \"Capabilities\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"20\",\r\n    \"limit\": \"8\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"header\": \"Integration with existing systems\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"19\",\r\n    \"limit\": \"21\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"header\": \"Innovation and Advantages\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"25\",\r\n    \"limit\": \"26\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"header\": \"Overview of EMR's Innovative Solutions\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"7\",\r\n    \"limit\": \"23\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 10,\r\n    \"header\": \"Advanced Algorithms and Machine Learning\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"30\",\r\n    \"limit\": \"28\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 11,\r\n    \"header\": \"Adaptive Communication Protocols\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"9\",\r\n    \"limit\": \"31\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 12,\r\n    \"header\": \"Advantages Over Current Technologies\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"12\",\r\n    \"limit\": \"0\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 13,\r\n    \"header\": \"Past Performance\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"22\",\r\n    \"limit\": \"33\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 14,\r\n    \"header\": \"Customer Feedback and Satisfaction Levels\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"15\",\r\n    \"limit\": \"34\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 15,\r\n    \"header\": \"Implementation Challenges and Solutions\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"3\",\r\n    \"limit\": \"35\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 16,\r\n    \"header\": \"Security Measures and Data Protection Policies\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"6\",\r\n    \"limit\": \"36\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 17,\r\n    \"header\": \"Scalability and Future Proofing\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"4\",\r\n    \"limit\": \"37\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 18,\r\n    \"header\": \"Cost-Benefit Analysis\",\r\n    \"type\": \"Plain language\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"14\",\r\n    \"limit\": \"38\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 19,\r\n    \"header\": \"User Training and Onboarding Experience\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"17\",\r\n    \"limit\": \"39\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 20,\r\n    \"header\": \"Future Development Roadmap\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"11\",\r\n    \"limit\": \"40\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 21,\r\n    \"header\": \"System Architecture Overview\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"24\",\r\n    \"limit\": \"18\",\r\n    \"reviewer\": \"Maya Johnson\"\r\n  },\r\n  {\r\n    \"id\": 22,\r\n    \"header\": \"Risk Management Plan\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"15\",\r\n    \"limit\": \"22\",\r\n    \"reviewer\": \"Carlos Rodriguez\"\r\n  },\r\n  {\r\n    \"id\": 23,\r\n    \"header\": \"Compliance Documentation\",\r\n    \"type\": \"Legal\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"31\",\r\n    \"limit\": \"27\",\r\n    \"reviewer\": \"Sarah Chen\"\r\n  },\r\n  {\r\n    \"id\": 24,\r\n    \"header\": \"API Documentation\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"8\",\r\n    \"limit\": \"12\",\r\n    \"reviewer\": \"Raj Patel\"\r\n  },\r\n  {\r\n    \"id\": 25,\r\n    \"header\": \"User Interface Mockups\",\r\n    \"type\": \"Visual\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"19\",\r\n    \"limit\": \"25\",\r\n    \"reviewer\": \"Leila Ahmadi\"\r\n  },\r\n  {\r\n    \"id\": 26,\r\n    \"header\": \"Database Schema\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"22\",\r\n    \"limit\": \"20\",\r\n    \"reviewer\": \"Thomas Wilson\"\r\n  },\r\n  {\r\n    \"id\": 27,\r\n    \"header\": \"Testing Methodology\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"17\",\r\n    \"limit\": \"14\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 28,\r\n    \"header\": \"Deployment Strategy\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"26\",\r\n    \"limit\": \"30\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 29,\r\n    \"header\": \"Budget Breakdown\",\r\n    \"type\": \"Financial\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"13\",\r\n    \"limit\": \"16\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 30,\r\n    \"header\": \"Market Analysis\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"29\",\r\n    \"limit\": \"32\",\r\n    \"reviewer\": \"Sophia Martinez\"\r\n  },\r\n  {\r\n    \"id\": 31,\r\n    \"header\": \"Competitor Comparison\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"21\",\r\n    \"limit\": \"19\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 32,\r\n    \"header\": \"Maintenance Plan\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"16\",\r\n    \"limit\": \"23\",\r\n    \"reviewer\": \"Alex Thompson\"\r\n  },\r\n  {\r\n    \"id\": 33,\r\n    \"header\": \"User Personas\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"27\",\r\n    \"limit\": \"24\",\r\n    \"reviewer\": \"Nina Patel\"\r\n  },\r\n  {\r\n    \"id\": 34,\r\n    \"header\": \"Accessibility Compliance\",\r\n    \"type\": \"Legal\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"18\",\r\n    \"limit\": \"21\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 35,\r\n    \"header\": \"Performance Metrics\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"23\",\r\n    \"limit\": \"26\",\r\n    \"reviewer\": \"David Kim\"\r\n  },\r\n  {\r\n    \"id\": 36,\r\n    \"header\": \"Disaster Recovery Plan\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"14\",\r\n    \"limit\": \"17\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 37,\r\n    \"header\": \"Third-party Integrations\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"25\",\r\n    \"limit\": \"28\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 38,\r\n    \"header\": \"User Feedback Summary\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"20\",\r\n    \"limit\": \"15\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 39,\r\n    \"header\": \"Localization Strategy\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"12\",\r\n    \"limit\": \"19\",\r\n    \"reviewer\": \"Maria Garcia\"\r\n  },\r\n  {\r\n    \"id\": 40,\r\n    \"header\": \"Mobile Compatibility\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"28\",\r\n    \"limit\": \"31\",\r\n    \"reviewer\": \"James Wilson\"\r\n  },\r\n  {\r\n    \"id\": 41,\r\n    \"header\": \"Data Migration Plan\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"19\",\r\n    \"limit\": \"22\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 42,\r\n    \"header\": \"Quality Assurance Protocols\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"30\",\r\n    \"limit\": \"33\",\r\n    \"reviewer\": \"Priya Singh\"\r\n  },\r\n  {\r\n    \"id\": 43,\r\n    \"header\": \"Stakeholder Analysis\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"11\",\r\n    \"limit\": \"14\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 44,\r\n    \"header\": \"Environmental Impact Assessment\",\r\n    \"type\": \"Research\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"24\",\r\n    \"limit\": \"27\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 45,\r\n    \"header\": \"Intellectual Property Rights\",\r\n    \"type\": \"Legal\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"17\",\r\n    \"limit\": \"20\",\r\n    \"reviewer\": \"Sarah Johnson\"\r\n  },\r\n  {\r\n    \"id\": 46,\r\n    \"header\": \"Customer Support Framework\",\r\n    \"type\": \"Narrative\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"22\",\r\n    \"limit\": \"25\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 47,\r\n    \"header\": \"Version Control Strategy\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"15\",\r\n    \"limit\": \"18\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 48,\r\n    \"header\": \"Continuous Integration Pipeline\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"26\",\r\n    \"limit\": \"29\",\r\n    \"reviewer\": \"Michael Chen\"\r\n  },\r\n  {\r\n    \"id\": 49,\r\n    \"header\": \"Regulatory Compliance\",\r\n    \"type\": \"Legal\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"13\",\r\n    \"limit\": \"16\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 50,\r\n    \"header\": \"User Authentication System\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"28\",\r\n    \"limit\": \"31\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 51,\r\n    \"header\": \"Data Analytics Framework\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"21\",\r\n    \"limit\": \"24\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 52,\r\n    \"header\": \"Cloud Infrastructure\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"16\",\r\n    \"limit\": \"19\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 53,\r\n    \"header\": \"Network Security Measures\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"29\",\r\n    \"limit\": \"32\",\r\n    \"reviewer\": \"Lisa Wong\"\r\n  },\r\n  {\r\n    \"id\": 54,\r\n    \"header\": \"Project Timeline\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"14\",\r\n    \"limit\": \"17\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 55,\r\n    \"header\": \"Resource Allocation\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"27\",\r\n    \"limit\": \"30\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 56,\r\n    \"header\": \"Team Structure and Roles\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"20\",\r\n    \"limit\": \"23\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 57,\r\n    \"header\": \"Communication Protocols\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"15\",\r\n    \"limit\": \"18\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 58,\r\n    \"header\": \"Success Metrics\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"30\",\r\n    \"limit\": \"33\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 59,\r\n    \"header\": \"Internationalization Support\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"23\",\r\n    \"limit\": \"26\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 60,\r\n    \"header\": \"Backup and Recovery Procedures\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"18\",\r\n    \"limit\": \"21\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 61,\r\n    \"header\": \"Monitoring and Alerting System\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"25\",\r\n    \"limit\": \"28\",\r\n    \"reviewer\": \"Daniel Park\"\r\n  },\r\n  {\r\n    \"id\": 62,\r\n    \"header\": \"Code Review Guidelines\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"12\",\r\n    \"limit\": \"15\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 63,\r\n    \"header\": \"Documentation Standards\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"27\",\r\n    \"limit\": \"30\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 64,\r\n    \"header\": \"Release Management Process\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"22\",\r\n    \"limit\": \"25\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  },\r\n  {\r\n    \"id\": 65,\r\n    \"header\": \"Feature Prioritization Matrix\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"19\",\r\n    \"limit\": \"22\",\r\n    \"reviewer\": \"Emma Davis\"\r\n  },\r\n  {\r\n    \"id\": 66,\r\n    \"header\": \"Technical Debt Assessment\",\r\n    \"type\": \"Technical content\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"24\",\r\n    \"limit\": \"27\",\r\n    \"reviewer\": \"Eddie Lake\"\r\n  },\r\n  {\r\n    \"id\": 67,\r\n    \"header\": \"Capacity Planning\",\r\n    \"type\": \"Planning\",\r\n    \"status\": \"In Process\",\r\n    \"target\": \"21\",\r\n    \"limit\": \"24\",\r\n    \"reviewer\": \"Jamik Tashpulatov\"\r\n  },\r\n  {\r\n    \"id\": 68,\r\n    \"header\": \"Service Level Agreements\",\r\n    \"type\": \"Legal\",\r\n    \"status\": \"Done\",\r\n    \"target\": \"26\",\r\n    \"limit\": \"29\",\r\n    \"reviewer\": \"Assign reviewer\"\r\n  }\r\n]\r\n",
      "type": "registry:file",
      "target": "app/dashboard/data.json"
    },
    {
      "path": "blocks/dashboard-01/components/app-sidebar.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  ArrowUpCircleIcon,\r\n  BarChartIcon,\r\n  CameraIcon,\r\n  ClipboardListIcon,\r\n  DatabaseIcon,\r\n  FileCodeIcon,\r\n  FileIcon,\r\n  FileTextIcon,\r\n  FolderIcon,\r\n  HelpCircleIcon,\r\n  LayoutDashboardIcon,\r\n  ListIcon,\r\n  SearchIcon,\r\n  SettingsIcon,\r\n  UsersIcon,\r\n} from \"lucide-react\"\r\n\r\nimport { NavDocuments } from \"@/registry/new-york/blocks/dashboard-01/components/nav-documents\"\r\nimport { NavMain } from \"@/registry/new-york/blocks/dashboard-01/components/nav-main\"\r\nimport { NavSecondary } from \"@/registry/new-york/blocks/dashboard-01/components/nav-secondary\"\r\nimport { NavUser } from \"@/registry/new-york/blocks/dashboard-01/components/nav-user\"\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarHeader,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nconst data = {\r\n  user: {\r\n    name: \"shadcn\",\r\n    email: \"m@example.com\",\r\n    avatar: \"/avatars/shadcn.jpg\",\r\n  },\r\n  navMain: [\r\n    {\r\n      title: \"Dashboard\",\r\n      url: \"#\",\r\n      icon: LayoutDashboardIcon,\r\n    },\r\n    {\r\n      title: \"Lifecycle\",\r\n      url: \"#\",\r\n      icon: ListIcon,\r\n    },\r\n    {\r\n      title: \"Analytics\",\r\n      url: \"#\",\r\n      icon: BarChartIcon,\r\n    },\r\n    {\r\n      title: \"Projects\",\r\n      url: \"#\",\r\n      icon: FolderIcon,\r\n    },\r\n    {\r\n      title: \"Team\",\r\n      url: \"#\",\r\n      icon: UsersIcon,\r\n    },\r\n  ],\r\n  navClouds: [\r\n    {\r\n      title: \"Capture\",\r\n      icon: CameraIcon,\r\n      isActive: true,\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          title: \"Active Proposals\",\r\n          url: \"#\",\r\n        },\r\n        {\r\n          title: \"Archived\",\r\n          url: \"#\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Proposal\",\r\n      icon: FileTextIcon,\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          title: \"Active Proposals\",\r\n          url: \"#\",\r\n        },\r\n        {\r\n          title: \"Archived\",\r\n          url: \"#\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Prompts\",\r\n      icon: FileCodeIcon,\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          title: \"Active Proposals\",\r\n          url: \"#\",\r\n        },\r\n        {\r\n          title: \"Archived\",\r\n          url: \"#\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  navSecondary: [\r\n    {\r\n      title: \"Settings\",\r\n      url: \"#\",\r\n      icon: SettingsIcon,\r\n    },\r\n    {\r\n      title: \"Get Help\",\r\n      url: \"#\",\r\n      icon: HelpCircleIcon,\r\n    },\r\n    {\r\n      title: \"Search\",\r\n      url: \"#\",\r\n      icon: SearchIcon,\r\n    },\r\n  ],\r\n  documents: [\r\n    {\r\n      name: \"Data Library\",\r\n      url: \"#\",\r\n      icon: DatabaseIcon,\r\n    },\r\n    {\r\n      name: \"Reports\",\r\n      url: \"#\",\r\n      icon: ClipboardListIcon,\r\n    },\r\n    {\r\n      name: \"Word Assistant\",\r\n      url: \"#\",\r\n      icon: FileIcon,\r\n    },\r\n  ],\r\n}\r\n\r\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n  return (\r\n    <Sidebar collapsible=\"offcanvas\" {...props}>\r\n      <SidebarHeader>\r\n        <SidebarMenu>\r\n          <SidebarMenuItem>\r\n            <SidebarMenuButton\r\n              asChild\r\n              className=\"data-[slot=sidebar-menu-button]:!p-1.5\"\r\n            >\r\n              <a href=\"#\">\r\n                <ArrowUpCircleIcon className=\"h-5 w-5\" />\r\n                <span className=\"text-base font-semibold\">Acme Inc.</span>\r\n              </a>\r\n            </SidebarMenuButton>\r\n          </SidebarMenuItem>\r\n        </SidebarMenu>\r\n      </SidebarHeader>\r\n      <SidebarContent>\r\n        <NavMain items={data.navMain} />\r\n        <NavDocuments items={data.documents} />\r\n        <NavSecondary items={data.navSecondary} className=\"mt-auto\" />\r\n      </SidebarContent>\r\n      <SidebarFooter>\r\n        <NavUser user={data.user} />\r\n      </SidebarFooter>\r\n    </Sidebar>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/chart-area-interactive.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nimport { useIsMobile } from \"@/registry/new-york/hooks/use-mobile\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/new-york/ui/card\"\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/new-york/ui/chart\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/registry/new-york/ui/select\"\r\nimport {\r\n  ToggleGroup,\r\n  ToggleGroupItem,\r\n} from \"@/registry/new-york/ui/toggle-group\"\nconst chartData = [\r\n  { date: \"2024-04-01\", desktop: 222, mobile: 150 },\r\n  { date: \"2024-04-02\", desktop: 97, mobile: 180 },\r\n  { date: \"2024-04-03\", desktop: 167, mobile: 120 },\r\n  { date: \"2024-04-04\", desktop: 242, mobile: 260 },\r\n  { date: \"2024-04-05\", desktop: 373, mobile: 290 },\r\n  { date: \"2024-04-06\", desktop: 301, mobile: 340 },\r\n  { date: \"2024-04-07\", desktop: 245, mobile: 180 },\r\n  { date: \"2024-04-08\", desktop: 409, mobile: 320 },\r\n  { date: \"2024-04-09\", desktop: 59, mobile: 110 },\r\n  { date: \"2024-04-10\", desktop: 261, mobile: 190 },\r\n  { date: \"2024-04-11\", desktop: 327, mobile: 350 },\r\n  { date: \"2024-04-12\", desktop: 292, mobile: 210 },\r\n  { date: \"2024-04-13\", desktop: 342, mobile: 380 },\r\n  { date: \"2024-04-14\", desktop: 137, mobile: 220 },\r\n  { date: \"2024-04-15\", desktop: 120, mobile: 170 },\r\n  { date: \"2024-04-16\", desktop: 138, mobile: 190 },\r\n  { date: \"2024-04-17\", desktop: 446, mobile: 360 },\r\n  { date: \"2024-04-18\", desktop: 364, mobile: 410 },\r\n  { date: \"2024-04-19\", desktop: 243, mobile: 180 },\r\n  { date: \"2024-04-20\", desktop: 89, mobile: 150 },\r\n  { date: \"2024-04-21\", desktop: 137, mobile: 200 },\r\n  { date: \"2024-04-22\", desktop: 224, mobile: 170 },\r\n  { date: \"2024-04-23\", desktop: 138, mobile: 230 },\r\n  { date: \"2024-04-24\", desktop: 387, mobile: 290 },\r\n  { date: \"2024-04-25\", desktop: 215, mobile: 250 },\r\n  { date: \"2024-04-26\", desktop: 75, mobile: 130 },\r\n  { date: \"2024-04-27\", desktop: 383, mobile: 420 },\r\n  { date: \"2024-04-28\", desktop: 122, mobile: 180 },\r\n  { date: \"2024-04-29\", desktop: 315, mobile: 240 },\r\n  { date: \"2024-04-30\", desktop: 454, mobile: 380 },\r\n  { date: \"2024-05-01\", desktop: 165, mobile: 220 },\r\n  { date: \"2024-05-02\", desktop: 293, mobile: 310 },\r\n  { date: \"2024-05-03\", desktop: 247, mobile: 190 },\r\n  { date: \"2024-05-04\", desktop: 385, mobile: 420 },\r\n  { date: \"2024-05-05\", desktop: 481, mobile: 390 },\r\n  { date: \"2024-05-06\", desktop: 498, mobile: 520 },\r\n  { date: \"2024-05-07\", desktop: 388, mobile: 300 },\r\n  { date: \"2024-05-08\", desktop: 149, mobile: 210 },\r\n  { date: \"2024-05-09\", desktop: 227, mobile: 180 },\r\n  { date: \"2024-05-10\", desktop: 293, mobile: 330 },\r\n  { date: \"2024-05-11\", desktop: 335, mobile: 270 },\r\n  { date: \"2024-05-12\", desktop: 197, mobile: 240 },\r\n  { date: \"2024-05-13\", desktop: 197, mobile: 160 },\r\n  { date: \"2024-05-14\", desktop: 448, mobile: 490 },\r\n  { date: \"2024-05-15\", desktop: 473, mobile: 380 },\r\n  { date: \"2024-05-16\", desktop: 338, mobile: 400 },\r\n  { date: \"2024-05-17\", desktop: 499, mobile: 420 },\r\n  { date: \"2024-05-18\", desktop: 315, mobile: 350 },\r\n  { date: \"2024-05-19\", desktop: 235, mobile: 180 },\r\n  { date: \"2024-05-20\", desktop: 177, mobile: 230 },\r\n  { date: \"2024-05-21\", desktop: 82, mobile: 140 },\r\n  { date: \"2024-05-22\", desktop: 81, mobile: 120 },\r\n  { date: \"2024-05-23\", desktop: 252, mobile: 290 },\r\n  { date: \"2024-05-24\", desktop: 294, mobile: 220 },\r\n  { date: \"2024-05-25\", desktop: 201, mobile: 250 },\r\n  { date: \"2024-05-26\", desktop: 213, mobile: 170 },\r\n  { date: \"2024-05-27\", desktop: 420, mobile: 460 },\r\n  { date: \"2024-05-28\", desktop: 233, mobile: 190 },\r\n  { date: \"2024-05-29\", desktop: 78, mobile: 130 },\r\n  { date: \"2024-05-30\", desktop: 340, mobile: 280 },\r\n  { date: \"2024-05-31\", desktop: 178, mobile: 230 },\r\n  { date: \"2024-06-01\", desktop: 178, mobile: 200 },\r\n  { date: \"2024-06-02\", desktop: 470, mobile: 410 },\r\n  { date: \"2024-06-03\", desktop: 103, mobile: 160 },\r\n  { date: \"2024-06-04\", desktop: 439, mobile: 380 },\r\n  { date: \"2024-06-05\", desktop: 88, mobile: 140 },\r\n  { date: \"2024-06-06\", desktop: 294, mobile: 250 },\r\n  { date: \"2024-06-07\", desktop: 323, mobile: 370 },\r\n  { date: \"2024-06-08\", desktop: 385, mobile: 320 },\r\n  { date: \"2024-06-09\", desktop: 438, mobile: 480 },\r\n  { date: \"2024-06-10\", desktop: 155, mobile: 200 },\r\n  { date: \"2024-06-11\", desktop: 92, mobile: 150 },\r\n  { date: \"2024-06-12\", desktop: 492, mobile: 420 },\r\n  { date: \"2024-06-13\", desktop: 81, mobile: 130 },\r\n  { date: \"2024-06-14\", desktop: 426, mobile: 380 },\r\n  { date: \"2024-06-15\", desktop: 307, mobile: 350 },\r\n  { date: \"2024-06-16\", desktop: 371, mobile: 310 },\r\n  { date: \"2024-06-17\", desktop: 475, mobile: 520 },\r\n  { date: \"2024-06-18\", desktop: 107, mobile: 170 },\r\n  { date: \"2024-06-19\", desktop: 341, mobile: 290 },\r\n  { date: \"2024-06-20\", desktop: 408, mobile: 450 },\r\n  { date: \"2024-06-21\", desktop: 169, mobile: 210 },\r\n  { date: \"2024-06-22\", desktop: 317, mobile: 270 },\r\n  { date: \"2024-06-23\", desktop: 480, mobile: 530 },\r\n  { date: \"2024-06-24\", desktop: 132, mobile: 180 },\r\n  { date: \"2024-06-25\", desktop: 141, mobile: 190 },\r\n  { date: \"2024-06-26\", desktop: 434, mobile: 380 },\r\n  { date: \"2024-06-27\", desktop: 448, mobile: 490 },\r\n  { date: \"2024-06-28\", desktop: 149, mobile: 200 },\r\n  { date: \"2024-06-29\", desktop: 103, mobile: 160 },\r\n  { date: \"2024-06-30\", desktop: 446, mobile: 400 },\r\n]\r\n\r\nconst chartConfig = {\r\n  visitors: {\r\n    label: \"Visitors\",\r\n  },\r\n  desktop: {\r\n    label: \"Desktop\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n  mobile: {\r\n    label: \"Mobile\",\r\n    color: \"hsl(var(--chart-2))\",\r\n  },\r\n} satisfies ChartConfig\r\n\r\nexport function ChartAreaInteractive() {\r\n  const isMobile = useIsMobile()\r\n  const [timeRange, setTimeRange] = React.useState(\"30d\")\r\n\r\n  React.useEffect(() => {\r\n    if (isMobile) {\r\n      setTimeRange(\"7d\")\r\n    }\r\n  }, [isMobile])\r\n\r\n  const filteredData = chartData.filter((item) => {\r\n    const date = new Date(item.date)\r\n    const referenceDate = new Date(\"2024-06-30\")\r\n    let daysToSubtract = 90\r\n    if (timeRange === \"30d\") {\r\n      daysToSubtract = 30\r\n    } else if (timeRange === \"7d\") {\r\n      daysToSubtract = 7\r\n    }\r\n    const startDate = new Date(referenceDate)\r\n    startDate.setDate(startDate.getDate() - daysToSubtract)\r\n    return date >= startDate\r\n  })\r\n\r\n  return (\r\n    <Card className=\"@container/card\">\r\n      <CardHeader className=\"relative\">\r\n        <CardTitle>Total Visitors</CardTitle>\r\n        <CardDescription>\r\n          <span className=\"@[540px]/card:block hidden\">\r\n            Total for the last 3 months\r\n          </span>\r\n          <span className=\"@[540px]/card:hidden\">Last 3 months</span>\r\n        </CardDescription>\r\n        <div className=\"absolute right-4 top-4\">\r\n          <ToggleGroup\r\n            type=\"single\"\r\n            value={timeRange}\r\n            onValueChange={setTimeRange}\r\n            variant=\"outline\"\r\n            className=\"@[767px]/card:flex hidden\"\r\n          >\r\n            <ToggleGroupItem value=\"90d\" className=\"h-8 px-2.5\">\r\n              Last 3 months\r\n            </ToggleGroupItem>\r\n            <ToggleGroupItem value=\"30d\" className=\"h-8 px-2.5\">\r\n              Last 30 days\r\n            </ToggleGroupItem>\r\n            <ToggleGroupItem value=\"7d\" className=\"h-8 px-2.5\">\r\n              Last 7 days\r\n            </ToggleGroupItem>\r\n          </ToggleGroup>\r\n          <Select value={timeRange} onValueChange={setTimeRange}>\r\n            <SelectTrigger\r\n              className=\"@[767px]/card:hidden flex w-40\"\r\n              aria-label=\"Select a value\"\r\n            >\r\n              <SelectValue placeholder=\"Last 3 months\" />\r\n            </SelectTrigger>\r\n            <SelectContent className=\"rounded-xl\">\r\n              <SelectItem value=\"90d\" className=\"rounded-lg\">\r\n                Last 3 months\r\n              </SelectItem>\r\n              <SelectItem value=\"30d\" className=\"rounded-lg\">\r\n                Last 30 days\r\n              </SelectItem>\r\n              <SelectItem value=\"7d\" className=\"rounded-lg\">\r\n                Last 7 days\r\n              </SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\r\n        <ChartContainer\r\n          config={chartConfig}\r\n          className=\"aspect-auto h-[250px] w-full\"\r\n        >\r\n          <AreaChart data={filteredData}>\r\n            <defs>\r\n              <linearGradient id=\"fillDesktop\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop\r\n                  offset=\"5%\"\r\n                  stopColor=\"var(--color-desktop)\"\r\n                  stopOpacity={1.0}\r\n                />\r\n                <stop\r\n                  offset=\"95%\"\r\n                  stopColor=\"var(--color-desktop)\"\r\n                  stopOpacity={0.1}\r\n                />\r\n              </linearGradient>\r\n              <linearGradient id=\"fillMobile\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop\r\n                  offset=\"5%\"\r\n                  stopColor=\"var(--color-mobile)\"\r\n                  stopOpacity={0.8}\r\n                />\r\n                <stop\r\n                  offset=\"95%\"\r\n                  stopColor=\"var(--color-mobile)\"\r\n                  stopOpacity={0.1}\r\n                />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              minTickGap={32}\r\n              tickFormatter={(value) => {\r\n                const date = new Date(value)\r\n                return date.toLocaleDateString(\"en-US\", {\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })\r\n              }}\r\n            />\r\n            <ChartTooltip\r\n              cursor={false}\r\n              content={\r\n                <ChartTooltipContent\r\n                  labelFormatter={(value) => {\r\n                    return new Date(value).toLocaleDateString(\"en-US\", {\r\n                      month: \"short\",\r\n                      day: \"numeric\",\r\n                    })\r\n                  }}\r\n                  indicator=\"dot\"\r\n                />\r\n              }\r\n            />\r\n            <Area\r\n              dataKey=\"mobile\"\r\n              type=\"natural\"\r\n              fill=\"url(#fillMobile)\"\r\n              stroke=\"var(--color-mobile)\"\r\n              stackId=\"a\"\r\n            />\r\n            <Area\r\n              dataKey=\"desktop\"\r\n              type=\"natural\"\r\n              fill=\"url(#fillDesktop)\"\r\n              stroke=\"var(--color-desktop)\"\r\n              stackId=\"a\"\r\n            />\r\n          </AreaChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/data-table.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  DndContext,\r\n  KeyboardSensor,\r\n  MouseSensor,\r\n  TouchSensor,\r\n  closestCenter,\r\n  useSensor,\r\n  useSensors,\r\n  type DragEndEvent,\r\n  type UniqueIdentifier,\r\n} from \"@dnd-kit/core\"\r\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\"\r\nimport {\r\n  SortableContext,\r\n  arrayMove,\r\n  useSortable,\r\n  verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\"\r\nimport { CSS } from \"@dnd-kit/utilities\"\r\nimport {\r\n  ColumnDef,\r\n  ColumnFiltersState,\r\n  Row,\r\n  SortingState,\r\n  VisibilityState,\r\n  flexRender,\r\n  getCoreRowModel,\r\n  getFacetedRowModel,\r\n  getFacetedUniqueValues,\r\n  getFilteredRowModel,\r\n  getPaginationRowModel,\r\n  getSortedRowModel,\r\n  useReactTable,\r\n} from \"@tanstack/react-table\"\r\nimport {\r\n  CheckCircle2Icon,\r\n  CheckCircleIcon,\r\n  ChevronDownIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  ChevronsLeftIcon,\r\n  ChevronsRightIcon,\r\n  ColumnsIcon,\r\n  GripVerticalIcon,\r\n  LoaderIcon,\r\n  MoreVerticalIcon,\r\n  PlusIcon,\r\n  TrendingUpIcon,\r\n} from \"lucide-react\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\nimport { toast } from \"sonner\"\r\nimport { z } from \"zod\"\r\n\r\nimport { useIsMobile } from \"@/registry/new-york/hooks/use-mobile\"\r\nimport { Badge } from \"@/registry/new-york/ui/badge\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/new-york/ui/chart\"\r\nimport { Checkbox } from \"@/registry/new-york/ui/checkbox\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/new-york/ui/dropdown-menu\"\r\nimport { Input } from \"@/registry/new-york/ui/input\"\r\nimport { Label } from \"@/registry/new-york/ui/label\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/registry/new-york/ui/select\"\r\nimport { Separator } from \"@/registry/new-york/ui/separator\"\r\nimport {\r\n  Sheet,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetFooter,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/registry/new-york/ui/sheet\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/registry/new-york/ui/table\"\r\nimport {\r\n  Tabs,\r\n  TabsContent,\r\n  TabsList,\r\n  TabsTrigger,\r\n} from \"@/registry/new-york/ui/tabs\"\r\n\r\nexport const schema = z.object({\r\n  id: z.number(),\r\n  header: z.string(),\r\n  type: z.string(),\r\n  status: z.string(),\r\n  target: z.string(),\r\n  limit: z.string(),\r\n  reviewer: z.string(),\r\n})\r\n\r\n// Create a separate component for the drag handle\r\nfunction DragHandle({ id }: { id: number }) {\r\n  const { attributes, listeners } = useSortable({\r\n    id,\r\n  })\r\n\r\n  return (\r\n    <Button\r\n      {...attributes}\r\n      {...listeners}\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className=\"size-7 text-muted-foreground hover:bg-transparent\"\r\n    >\r\n      <GripVerticalIcon className=\"size-3 text-muted-foreground\" />\r\n      <span className=\"sr-only\">Drag to reorder</span>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst columns: ColumnDef<z.infer<typeof schema>>[] = [\r\n  {\r\n    id: \"drag\",\r\n    header: () => null,\r\n    cell: ({ row }) => <DragHandle id={row.original.id} />,\r\n  },\r\n  {\r\n    id: \"select\",\r\n    header: ({ table }) => (\r\n      <div className=\"flex items-center justify-center\">\r\n        <Checkbox\r\n          checked={\r\n            table.getIsAllPageRowsSelected() ||\r\n            (table.getIsSomePageRowsSelected() && \"indeterminate\")\r\n          }\r\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n          aria-label=\"Select all\"\r\n        />\r\n      </div>\r\n    ),\r\n    cell: ({ row }) => (\r\n      <div className=\"flex items-center justify-center\">\r\n        <Checkbox\r\n          checked={row.getIsSelected()}\r\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n          aria-label=\"Select row\"\r\n        />\r\n      </div>\r\n    ),\r\n    enableSorting: false,\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: \"header\",\r\n    header: \"Header\",\r\n    cell: ({ row }) => {\r\n      return <TableCellViewer item={row.original} />\r\n    },\r\n    enableHiding: false,\r\n  },\r\n  {\r\n    accessorKey: \"type\",\r\n    header: \"Section Type\",\r\n    cell: ({ row }) => (\r\n      <div className=\"w-32\">\r\n        <Badge variant=\"outline\" className=\"px-1.5 text-muted-foreground\">\r\n          {row.original.type}\r\n        </Badge>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"status\",\r\n    header: \"Status\",\r\n    cell: ({ row }) => (\r\n      <Badge\r\n        variant=\"outline\"\r\n        className=\"flex gap-1 px-1.5 text-muted-foreground [&_svg]:size-3\"\r\n      >\r\n        {row.original.status === \"Done\" ? (\r\n          <CheckCircle2Icon className=\"text-green-500 dark:text-green-400\" />\r\n        ) : (\r\n          <LoaderIcon />\r\n        )}\r\n        {row.original.status}\r\n      </Badge>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"target\",\r\n    header: () => <div className=\"w-full text-right\">Target</div>,\r\n    cell: ({ row }) => (\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\r\n            loading: `Saving ${row.original.header}`,\r\n            success: \"Done\",\r\n            error: \"Error\",\r\n          })\r\n        }}\r\n      >\r\n        <Label htmlFor={`${row.original.id}-target`} className=\"sr-only\">\r\n          Target\r\n        </Label>\r\n        <Input\r\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\r\n          defaultValue={row.original.target}\r\n          id={`${row.original.id}-target`}\r\n        />\r\n      </form>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"limit\",\r\n    header: () => <div className=\"w-full text-right\">Limit</div>,\r\n    cell: ({ row }) => (\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\r\n            loading: `Saving ${row.original.header}`,\r\n            success: \"Done\",\r\n            error: \"Error\",\r\n          })\r\n        }}\r\n      >\r\n        <Label htmlFor={`${row.original.id}-limit`} className=\"sr-only\">\r\n          Limit\r\n        </Label>\r\n        <Input\r\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\r\n          defaultValue={row.original.limit}\r\n          id={`${row.original.id}-limit`}\r\n        />\r\n      </form>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"reviewer\",\r\n    header: \"Reviewer\",\r\n    cell: ({ row }) => {\r\n      const isAssigned = row.original.reviewer !== \"Assign reviewer\"\r\n\r\n      if (isAssigned) {\r\n        return row.original.reviewer\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <Label htmlFor={`${row.original.id}-reviewer`} className=\"sr-only\">\r\n            Reviewer\r\n          </Label>\r\n          <Select>\r\n            <SelectTrigger\r\n              className=\"h-8 w-40\"\r\n              id={`${row.original.id}-reviewer`}\r\n            >\r\n              <SelectValue placeholder=\"Assign reviewer\" />\r\n            </SelectTrigger>\r\n            <SelectContent align=\"end\">\r\n              <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\r\n              <SelectItem value=\"Jamik Tashpulatov\">\r\n                Jamik Tashpulatov\r\n              </SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </>\r\n      )\r\n    },\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    cell: () => (\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button\r\n            variant=\"ghost\"\r\n            className=\"flex size-8 text-muted-foreground data-[state=open]:bg-muted\"\r\n            size=\"icon\"\r\n          >\r\n            <MoreVerticalIcon />\r\n            <span className=\"sr-only\">Open menu</span>\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"end\" className=\"w-32\">\r\n          <DropdownMenuItem>Edit</DropdownMenuItem>\r\n          <DropdownMenuItem>Make a copy</DropdownMenuItem>\r\n          <DropdownMenuItem>Favorite</DropdownMenuItem>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuItem>Delete</DropdownMenuItem>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n    ),\r\n  },\r\n]\r\n\r\nfunction DraggableRow({ row }: { row: Row<z.infer<typeof schema>> }) {\r\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\r\n    id: row.original.id,\r\n  })\r\n\r\n  return (\r\n    <TableRow\r\n      data-state={row.getIsSelected() && \"selected\"}\r\n      data-dragging={isDragging}\r\n      ref={setNodeRef}\r\n      className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\r\n      style={{\r\n        transform: CSS.Transform.toString(transform),\r\n        transition: transition,\r\n      }}\r\n    >\r\n      {row.getVisibleCells().map((cell) => (\r\n        <TableCell key={cell.id}>\r\n          {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nexport function DataTable({\r\n  data: initialData,\r\n}: {\r\n  data: z.infer<typeof schema>[]\r\n}) {\r\n  const [data, setData] = React.useState(() => initialData)\r\n  const [rowSelection, setRowSelection] = React.useState({})\r\n  const [columnVisibility, setColumnVisibility] =\r\n    React.useState<VisibilityState>({})\r\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\r\n    []\r\n  )\r\n  const [sorting, setSorting] = React.useState<SortingState>([])\r\n  const [pagination, setPagination] = React.useState({\r\n    pageIndex: 0,\r\n    pageSize: 10,\r\n  })\r\n  const sortableId = React.useId()\r\n  const sensors = useSensors(\r\n    useSensor(MouseSensor, {}),\r\n    useSensor(TouchSensor, {}),\r\n    useSensor(KeyboardSensor, {})\r\n  )\r\n\r\n  const dataIds = React.useMemo<UniqueIdentifier[]>(\r\n    () => data?.map(({ id }) => id) || [],\r\n    [data]\r\n  )\r\n\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    state: {\r\n      sorting,\r\n      columnVisibility,\r\n      rowSelection,\r\n      columnFilters,\r\n      pagination,\r\n    },\r\n    getRowId: (row) => row.id.toString(),\r\n    enableRowSelection: true,\r\n    onRowSelectionChange: setRowSelection,\r\n    onSortingChange: setSorting,\r\n    onColumnFiltersChange: setColumnFilters,\r\n    onColumnVisibilityChange: setColumnVisibility,\r\n    onPaginationChange: setPagination,\r\n    getCoreRowModel: getCoreRowModel(),\r\n    getFilteredRowModel: getFilteredRowModel(),\r\n    getPaginationRowModel: getPaginationRowModel(),\r\n    getSortedRowModel: getSortedRowModel(),\r\n    getFacetedRowModel: getFacetedRowModel(),\r\n    getFacetedUniqueValues: getFacetedUniqueValues(),\r\n  })\r\n\r\n  function handleDragEnd(event: DragEndEvent) {\r\n    const { active, over } = event\r\n    if (active && over && active.id !== over.id) {\r\n      setData((data) => {\r\n        const oldIndex = dataIds.indexOf(active.id)\r\n        const newIndex = dataIds.indexOf(over.id)\r\n        return arrayMove(data, oldIndex, newIndex)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tabs\r\n      defaultValue=\"outline\"\r\n      className=\"flex w-full flex-col justify-start gap-6\"\r\n    >\r\n      <div className=\"flex items-center justify-between px-4 lg:px-6\">\r\n        <Label htmlFor=\"view-selector\" className=\"sr-only\">\r\n          View\r\n        </Label>\r\n        <Select defaultValue=\"outline\">\r\n          <SelectTrigger\r\n            className=\"@4xl/main:hidden flex w-fit\"\r\n            id=\"view-selector\"\r\n          >\r\n            <SelectValue placeholder=\"Select a view\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"outline\">Outline</SelectItem>\r\n            <SelectItem value=\"past-performance\">Past Performance</SelectItem>\r\n            <SelectItem value=\"key-personnel\">Key Personnel</SelectItem>\r\n            <SelectItem value=\"focus-documents\">Focus Documents</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <TabsList className=\"@4xl/main:flex hidden\">\r\n          <TabsTrigger value=\"outline\">Outline</TabsTrigger>\r\n          <TabsTrigger value=\"past-performance\" className=\"gap-1\">\r\n            Past Performance{\" \"}\r\n            <Badge\r\n              variant=\"secondary\"\r\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\r\n            >\r\n              3\r\n            </Badge>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"key-personnel\" className=\"gap-1\">\r\n            Key Personnel{\" \"}\r\n            <Badge\r\n              variant=\"secondary\"\r\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\r\n            >\r\n              2\r\n            </Badge>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"focus-documents\">Focus Documents</TabsTrigger>\r\n        </TabsList>\r\n        <div className=\"flex items-center gap-2\">\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button variant=\"outline\" size=\"sm\">\r\n                <ColumnsIcon />\r\n                <span className=\"hidden lg:inline\">Customize Columns</span>\r\n                <span className=\"lg:hidden\">Columns</span>\r\n                <ChevronDownIcon />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\" className=\"w-56\">\r\n              {table\r\n                .getAllColumns()\r\n                .filter(\r\n                  (column) =>\r\n                    typeof column.accessorFn !== \"undefined\" &&\r\n                    column.getCanHide()\r\n                )\r\n                .map((column) => {\r\n                  return (\r\n                    <DropdownMenuCheckboxItem\r\n                      key={column.id}\r\n                      className=\"capitalize\"\r\n                      checked={column.getIsVisible()}\r\n                      onCheckedChange={(value) =>\r\n                        column.toggleVisibility(!!value)\r\n                      }\r\n                    >\r\n                      {column.id}\r\n                    </DropdownMenuCheckboxItem>\r\n                  )\r\n                })}\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n          <Button variant=\"outline\" size=\"sm\">\r\n            <PlusIcon />\r\n            <span className=\"hidden lg:inline\">Add Section</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <TabsContent\r\n        value=\"outline\"\r\n        className=\"relative flex flex-col gap-4 overflow-auto px-4 lg:px-6\"\r\n      >\r\n        <div className=\"overflow-hidden rounded-lg border\">\r\n          <DndContext\r\n            collisionDetection={closestCenter}\r\n            modifiers={[restrictToVerticalAxis]}\r\n            onDragEnd={handleDragEnd}\r\n            sensors={sensors}\r\n            id={sortableId}\r\n          >\r\n            <Table>\r\n              <TableHeader className=\"sticky top-0 z-10 bg-muted\">\r\n                {table.getHeaderGroups().map((headerGroup) => (\r\n                  <TableRow key={headerGroup.id}>\r\n                    {headerGroup.headers.map((header) => {\r\n                      return (\r\n                        <TableHead key={header.id} colSpan={header.colSpan}>\r\n                          {header.isPlaceholder\r\n                            ? null\r\n                            : flexRender(\r\n                                header.column.columnDef.header,\r\n                                header.getContext()\r\n                              )}\r\n                        </TableHead>\r\n                      )\r\n                    })}\r\n                  </TableRow>\r\n                ))}\r\n              </TableHeader>\r\n              <TableBody className=\"**:data-[slot=table-cell]:first:w-8\">\r\n                {table.getRowModel().rows?.length ? (\r\n                  <SortableContext\r\n                    items={dataIds}\r\n                    strategy={verticalListSortingStrategy}\r\n                  >\r\n                    {table.getRowModel().rows.map((row) => (\r\n                      <DraggableRow key={row.id} row={row} />\r\n                    ))}\r\n                  </SortableContext>\r\n                ) : (\r\n                  <TableRow>\r\n                    <TableCell\r\n                      colSpan={columns.length}\r\n                      className=\"h-24 text-center\"\r\n                    >\r\n                      No results.\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </DndContext>\r\n        </div>\r\n        <div className=\"flex items-center justify-between px-4\">\r\n          <div className=\"hidden flex-1 text-sm text-muted-foreground lg:flex\">\r\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\r\n            {table.getFilteredRowModel().rows.length} row(s) selected.\r\n          </div>\r\n          <div className=\"flex w-full items-center gap-8 lg:w-fit\">\r\n            <div className=\"hidden items-center gap-2 lg:flex\">\r\n              <Label htmlFor=\"rows-per-page\" className=\"text-sm font-medium\">\r\n                Rows per page\r\n              </Label>\r\n              <Select\r\n                value={`${table.getState().pagination.pageSize}`}\r\n                onValueChange={(value) => {\r\n                  table.setPageSize(Number(value))\r\n                }}\r\n              >\r\n                <SelectTrigger className=\"w-20\" id=\"rows-per-page\">\r\n                  <SelectValue\r\n                    placeholder={table.getState().pagination.pageSize}\r\n                  />\r\n                </SelectTrigger>\r\n                <SelectContent side=\"top\">\r\n                  {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                    <SelectItem key={pageSize} value={`${pageSize}`}>\r\n                      {pageSize}\r\n                    </SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            <div className=\"flex w-fit items-center justify-center text-sm font-medium\">\r\n              Page {table.getState().pagination.pageIndex + 1} of{\" \"}\r\n              {table.getPageCount()}\r\n            </div>\r\n            <div className=\"ml-auto flex items-center gap-2 lg:ml-0\">\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n                onClick={() => table.setPageIndex(0)}\r\n                disabled={!table.getCanPreviousPage()}\r\n              >\r\n                <span className=\"sr-only\">Go to first page</span>\r\n                <ChevronsLeftIcon />\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"size-8\"\r\n                size=\"icon\"\r\n                onClick={() => table.previousPage()}\r\n                disabled={!table.getCanPreviousPage()}\r\n              >\r\n                <span className=\"sr-only\">Go to previous page</span>\r\n                <ChevronLeftIcon />\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"size-8\"\r\n                size=\"icon\"\r\n                onClick={() => table.nextPage()}\r\n                disabled={!table.getCanNextPage()}\r\n              >\r\n                <span className=\"sr-only\">Go to next page</span>\r\n                <ChevronRightIcon />\r\n              </Button>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"hidden size-8 lg:flex\"\r\n                size=\"icon\"\r\n                onClick={() => table.setPageIndex(table.getPageCount() - 1)}\r\n                disabled={!table.getCanNextPage()}\r\n              >\r\n                <span className=\"sr-only\">Go to last page</span>\r\n                <ChevronsRightIcon />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </TabsContent>\r\n      <TabsContent\r\n        value=\"past-performance\"\r\n        className=\"flex flex-col px-4 lg:px-6\"\r\n      >\r\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\r\n      </TabsContent>\r\n      <TabsContent value=\"key-personnel\" className=\"flex flex-col px-4 lg:px-6\">\r\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\r\n      </TabsContent>\r\n      <TabsContent\r\n        value=\"focus-documents\"\r\n        className=\"flex flex-col px-4 lg:px-6\"\r\n      >\r\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\r\n      </TabsContent>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nconst chartData = [\r\n  { month: \"January\", desktop: 186, mobile: 80 },\r\n  { month: \"February\", desktop: 305, mobile: 200 },\r\n  { month: \"March\", desktop: 237, mobile: 120 },\r\n  { month: \"April\", desktop: 73, mobile: 190 },\r\n  { month: \"May\", desktop: 209, mobile: 130 },\r\n  { month: \"June\", desktop: 214, mobile: 140 },\r\n]\r\n\r\nconst chartConfig = {\r\n  desktop: {\r\n    label: \"Desktop\",\r\n    color: \"var(--primary)\",\r\n  },\r\n  mobile: {\r\n    label: \"Mobile\",\r\n    color: \"var(--primary)\",\r\n  },\r\n} satisfies ChartConfig\r\n\r\nfunction TableCellViewer({ item }: { item: z.infer<typeof schema> }) {\r\n  const isMobile = useIsMobile()\r\n\r\n  return (\r\n    <Sheet>\r\n      <SheetTrigger asChild>\r\n        <Button variant=\"link\" className=\"w-fit px-0 text-left text-foreground\">\r\n          {item.header}\r\n        </Button>\r\n      </SheetTrigger>\r\n      <SheetContent side=\"right\" className=\"flex flex-col\">\r\n        <SheetHeader className=\"gap-1\">\r\n          <SheetTitle>{item.header}</SheetTitle>\r\n          <SheetDescription>\r\n            Showing total visitors for the last 6 months\r\n          </SheetDescription>\r\n        </SheetHeader>\r\n        <div className=\"flex flex-1 flex-col gap-4 overflow-y-auto py-4 text-sm\">\r\n          {!isMobile && (\r\n            <>\r\n              <ChartContainer config={chartConfig}>\r\n                <AreaChart\r\n                  accessibilityLayer\r\n                  data={chartData}\r\n                  margin={{\r\n                    left: 0,\r\n                    right: 10,\r\n                  }}\r\n                >\r\n                  <CartesianGrid vertical={false} />\r\n                  <XAxis\r\n                    dataKey=\"month\"\r\n                    tickLine={false}\r\n                    axisLine={false}\r\n                    tickMargin={8}\r\n                    tickFormatter={(value) => value.slice(0, 3)}\r\n                    hide\r\n                  />\r\n                  <ChartTooltip\r\n                    cursor={false}\r\n                    content={<ChartTooltipContent indicator=\"dot\" />}\r\n                  />\r\n                  <Area\r\n                    dataKey=\"mobile\"\r\n                    type=\"natural\"\r\n                    fill=\"var(--color-mobile)\"\r\n                    fillOpacity={0.6}\r\n                    stroke=\"var(--color-mobile)\"\r\n                    stackId=\"a\"\r\n                  />\r\n                  <Area\r\n                    dataKey=\"desktop\"\r\n                    type=\"natural\"\r\n                    fill=\"var(--color-desktop)\"\r\n                    fillOpacity={0.4}\r\n                    stroke=\"var(--color-desktop)\"\r\n                    stackId=\"a\"\r\n                  />\r\n                </AreaChart>\r\n              </ChartContainer>\r\n              <Separator />\r\n              <div className=\"grid gap-2\">\r\n                <div className=\"flex gap-2 font-medium leading-none\">\r\n                  Trending up by 5.2% this month{\" \"}\r\n                  <TrendingUpIcon className=\"size-4\" />\r\n                </div>\r\n                <div className=\"text-muted-foreground\">\r\n                  Showing total visitors for the last 6 months. This is just\r\n                  some random text to test the layout. It spans multiple lines\r\n                  and should wrap around.\r\n                </div>\r\n              </div>\r\n              <Separator />\r\n            </>\r\n          )}\r\n          <form className=\"flex flex-col gap-4\">\r\n            <div className=\"flex flex-col gap-3\">\r\n              <Label htmlFor=\"header\">Header</Label>\r\n              <Input id=\"header\" defaultValue={item.header} />\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"flex flex-col gap-3\">\r\n                <Label htmlFor=\"type\">Type</Label>\r\n                <Select defaultValue={item.type}>\r\n                  <SelectTrigger id=\"type\" className=\"w-full\">\r\n                    <SelectValue placeholder=\"Select a type\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Table of Contents\">\r\n                      Table of Contents\r\n                    </SelectItem>\r\n                    <SelectItem value=\"Executive Summary\">\r\n                      Executive Summary\r\n                    </SelectItem>\r\n                    <SelectItem value=\"Technical Approach\">\r\n                      Technical Approach\r\n                    </SelectItem>\r\n                    <SelectItem value=\"Design\">Design</SelectItem>\r\n                    <SelectItem value=\"Capabilities\">Capabilities</SelectItem>\r\n                    <SelectItem value=\"Focus Documents\">\r\n                      Focus Documents\r\n                    </SelectItem>\r\n                    <SelectItem value=\"Narrative\">Narrative</SelectItem>\r\n                    <SelectItem value=\"Cover Page\">Cover Page</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"flex flex-col gap-3\">\r\n                <Label htmlFor=\"status\">Status</Label>\r\n                <Select defaultValue={item.status}>\r\n                  <SelectTrigger id=\"status\" className=\"w-full\">\r\n                    <SelectValue placeholder=\"Select a status\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"Done\">Done</SelectItem>\r\n                    <SelectItem value=\"In Progress\">In Progress</SelectItem>\r\n                    <SelectItem value=\"Not Started\">Not Started</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"flex flex-col gap-3\">\r\n                <Label htmlFor=\"target\">Target</Label>\r\n                <Input id=\"target\" defaultValue={item.target} />\r\n              </div>\r\n              <div className=\"flex flex-col gap-3\">\r\n                <Label htmlFor=\"limit\">Limit</Label>\r\n                <Input id=\"limit\" defaultValue={item.limit} />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-3\">\r\n              <Label htmlFor=\"reviewer\">Reviewer</Label>\r\n              <Select defaultValue={item.reviewer}>\r\n                <SelectTrigger id=\"reviewer\" className=\"w-full\">\r\n                  <SelectValue placeholder=\"Select a reviewer\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\r\n                  <SelectItem value=\"Jamik Tashpulatov\">\r\n                    Jamik Tashpulatov\r\n                  </SelectItem>\r\n                  <SelectItem value=\"Emily Whalen\">Emily Whalen</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <SheetFooter className=\"mt-auto flex gap-2 sm:flex-col sm:space-x-0\">\r\n          <Button className=\"w-full\">Submit</Button>\r\n          <SheetClose asChild>\r\n            <Button variant=\"outline\" className=\"w-full\">\r\n              Done\r\n            </Button>\r\n          </SheetClose>\r\n        </SheetFooter>\r\n      </SheetContent>\r\n    </Sheet>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/nav-documents.tsx",
      "content": "\"use client\"\r\n\r\nimport {\r\n  FolderIcon,\r\n  MoreHorizontalIcon,\r\n  ShareIcon,\r\n  type LucideIcon,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/new-york/ui/dropdown-menu\"\r\nimport {\r\n  SidebarGroup,\r\n  SidebarGroupLabel,\r\n  SidebarMenu,\r\n  SidebarMenuAction,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function NavDocuments({\r\n  items,\r\n}: {\r\n  items: {\r\n    name: string\r\n    url: string\r\n    icon: LucideIcon\r\n  }[]\r\n}) {\r\n  const { isMobile } = useSidebar()\r\n\r\n  return (\r\n    <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\r\n      <SidebarGroupLabel>Documents</SidebarGroupLabel>\r\n      <SidebarMenu>\r\n        {items.map((item) => (\r\n          <SidebarMenuItem key={item.name}>\r\n            <SidebarMenuButton asChild>\r\n              <a href={item.url}>\r\n                <item.icon />\r\n                <span>{item.name}</span>\r\n              </a>\r\n            </SidebarMenuButton>\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <SidebarMenuAction\r\n                  showOnHover\r\n                  className=\"rounded-sm data-[state=open]:bg-accent\"\r\n                >\r\n                  <MoreHorizontalIcon />\r\n                  <span className=\"sr-only\">More</span>\r\n                </SidebarMenuAction>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent\r\n                className=\"w-24 rounded-lg\"\r\n                side={isMobile ? \"bottom\" : \"right\"}\r\n                align={isMobile ? \"end\" : \"start\"}\r\n              >\r\n                <DropdownMenuItem>\r\n                  <FolderIcon />\r\n                  <span>Open</span>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem>\r\n                  <ShareIcon />\r\n                  <span>Share</span>\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </SidebarMenuItem>\r\n        ))}\r\n        <SidebarMenuItem>\r\n          <SidebarMenuButton className=\"text-sidebar-foreground/70\">\r\n            <MoreHorizontalIcon className=\"text-sidebar-foreground/70\" />\r\n            <span>More</span>\r\n          </SidebarMenuButton>\r\n        </SidebarMenuItem>\r\n      </SidebarMenu>\r\n    </SidebarGroup>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/nav-main.tsx",
      "content": "\"use client\"\r\n\r\nimport { MailIcon, PlusCircleIcon, type LucideIcon } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport {\r\n  SidebarGroup,\r\n  SidebarGroupContent,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function NavMain({\r\n  items,\r\n}: {\r\n  items: {\r\n    title: string\r\n    url: string\r\n    icon?: LucideIcon\r\n  }[]\r\n}) {\r\n  return (\r\n    <SidebarGroup>\r\n      <SidebarGroupContent className=\"flex flex-col gap-2\">\r\n        <SidebarMenu>\r\n          <SidebarMenuItem className=\"flex items-center gap-2\">\r\n            <SidebarMenuButton\r\n              tooltip=\"Quick Create\"\r\n              className=\"min-w-8 bg-primary text-primary-foreground duration-200 ease-linear hover:bg-primary/90 hover:text-primary-foreground active:bg-primary/90 active:text-primary-foreground\"\r\n            >\r\n              <PlusCircleIcon />\r\n              <span>Quick Create</span>\r\n            </SidebarMenuButton>\r\n            <Button\r\n              size=\"icon\"\r\n              className=\"h-9 w-9 shrink-0 group-data-[collapsible=icon]:opacity-0\"\r\n              variant=\"outline\"\r\n            >\r\n              <MailIcon />\r\n              <span className=\"sr-only\">Inbox</span>\r\n            </Button>\r\n          </SidebarMenuItem>\r\n        </SidebarMenu>\r\n        <SidebarMenu>\r\n          {items.map((item) => (\r\n            <SidebarMenuItem key={item.title}>\r\n              <SidebarMenuButton tooltip={item.title}>\r\n                {item.icon && <item.icon />}\r\n                <span>{item.title}</span>\r\n              </SidebarMenuButton>\r\n            </SidebarMenuItem>\r\n          ))}\r\n        </SidebarMenu>\r\n      </SidebarGroupContent>\r\n    </SidebarGroup>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/nav-secondary.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { LucideIcon } from \"lucide-react\"\r\n\r\nimport {\r\n  SidebarGroup,\r\n  SidebarGroupContent,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function NavSecondary({\r\n  items,\r\n  ...props\r\n}: {\r\n  items: {\r\n    title: string\r\n    url: string\r\n    icon: LucideIcon\r\n  }[]\r\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\r\n  return (\r\n    <SidebarGroup {...props}>\r\n      <SidebarGroupContent>\r\n        <SidebarMenu>\r\n          {items.map((item) => (\r\n            <SidebarMenuItem key={item.title}>\r\n              <SidebarMenuButton asChild>\r\n                <a href={item.url}>\r\n                  <item.icon />\r\n                  <span>{item.title}</span>\r\n                </a>\r\n              </SidebarMenuButton>\r\n            </SidebarMenuItem>\r\n          ))}\r\n        </SidebarMenu>\r\n      </SidebarGroupContent>\r\n    </SidebarGroup>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/nav-user.tsx",
      "content": "\"use client\"\r\n\r\nimport {\r\n  BellIcon,\r\n  CreditCardIcon,\r\n  LogOutIcon,\r\n  MoreVerticalIcon,\r\n  UserCircleIcon,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/registry/new-york/ui/avatar\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/new-york/ui/dropdown-menu\"\r\nimport {\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function NavUser({\r\n  user,\r\n}: {\r\n  user: {\r\n    name: string\r\n    email: string\r\n    avatar: string\r\n  }\r\n}) {\r\n  const { isMobile } = useSidebar()\r\n\r\n  return (\r\n    <SidebarMenu>\r\n      <SidebarMenuItem>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <SidebarMenuButton\r\n              size=\"lg\"\r\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\r\n            >\r\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\r\n                <AvatarImage src={user.avatar} alt={user.name} />\r\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\r\n              </Avatar>\r\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                <span className=\"truncate font-medium\">{user.name}</span>\r\n                <span className=\"truncate text-xs text-muted-foreground\">\r\n                  {user.email}\r\n                </span>\r\n              </div>\r\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\r\n            </SidebarMenuButton>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent\r\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\r\n            side={isMobile ? \"bottom\" : \"right\"}\r\n            align=\"end\"\r\n            sideOffset={4}\r\n          >\r\n            <DropdownMenuLabel className=\"p-0 font-normal\">\r\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\r\n                <Avatar className=\"h-8 w-8 rounded-lg\">\r\n                  <AvatarImage src={user.avatar} alt={user.name} />\r\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                  <span className=\"truncate font-medium\">{user.name}</span>\r\n                  <span className=\"truncate text-xs text-muted-foreground\">\r\n                    {user.email}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </DropdownMenuLabel>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem>\r\n                <UserCircleIcon />\r\n                Account\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <CreditCardIcon />\r\n                Billing\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <BellIcon />\r\n                Notifications\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>\r\n              <LogOutIcon />\r\n              Log out\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </SidebarMenuItem>\r\n    </SidebarMenu>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/section-cards.tsx",
      "content": "import { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\r\n\r\nimport { Badge } from \"@/registry/new-york/ui/badge\"\r\nimport {\r\n  Card,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/new-york/ui/card\"\r\n\r\nexport function SectionCards() {\r\n  return (\r\n    <div className=\"*:data-[slot=card]:shadow-xs @xl/main:grid-cols-2 @5xl/main:grid-cols-4 grid grid-cols-1 gap-4 px-4 *:data-[slot=card]:bg-gradient-to-t *:data-[slot=card]:from-primary/5 *:data-[slot=card]:to-card dark:*:data-[slot=card]:bg-card lg:px-6\">\r\n      <Card className=\"@container/card\">\r\n        <CardHeader className=\"relative\">\r\n          <CardDescription>Total Revenue</CardDescription>\r\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\r\n            $1,250.00\r\n          </CardTitle>\r\n          <div className=\"absolute right-4 top-4\">\r\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n              <TrendingUpIcon className=\"size-3\" />\r\n              +12.5%\r\n            </Badge>\r\n          </div>\r\n        </CardHeader>\r\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n            Trending up this month <TrendingUpIcon className=\"size-4\" />\r\n          </div>\r\n          <div className=\"text-muted-foreground\">\r\n            Visitors for the last 6 months\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n      <Card className=\"@container/card\">\r\n        <CardHeader className=\"relative\">\r\n          <CardDescription>New Customers</CardDescription>\r\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\r\n            1,234\r\n          </CardTitle>\r\n          <div className=\"absolute right-4 top-4\">\r\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n              <TrendingDownIcon className=\"size-3\" />\r\n              -20%\r\n            </Badge>\r\n          </div>\r\n        </CardHeader>\r\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n            Down 20% this period <TrendingDownIcon className=\"size-4\" />\r\n          </div>\r\n          <div className=\"text-muted-foreground\">\r\n            Acquisition needs attention\r\n          </div>\r\n        </CardFooter>\r\n      </Card>\r\n      <Card className=\"@container/card\">\r\n        <CardHeader className=\"relative\">\r\n          <CardDescription>Active Accounts</CardDescription>\r\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\r\n            45,678\r\n          </CardTitle>\r\n          <div className=\"absolute right-4 top-4\">\r\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n              <TrendingUpIcon className=\"size-3\" />\r\n              +12.5%\r\n            </Badge>\r\n          </div>\r\n        </CardHeader>\r\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n            Strong user retention <TrendingUpIcon className=\"size-4\" />\r\n          </div>\r\n          <div className=\"text-muted-foreground\">Engagement exceed targets</div>\r\n        </CardFooter>\r\n      </Card>\r\n      <Card className=\"@container/card\">\r\n        <CardHeader className=\"relative\">\r\n          <CardDescription>Growth Rate</CardDescription>\r\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\r\n            4.5%\r\n          </CardTitle>\r\n          <div className=\"absolute right-4 top-4\">\r\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n              <TrendingUpIcon className=\"size-3\" />\r\n              +4.5%\r\n            </Badge>\r\n          </div>\r\n        </CardHeader>\r\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n            Steady performance <TrendingUpIcon className=\"size-4\" />\r\n          </div>\r\n          <div className=\"text-muted-foreground\">Meets growth projections</div>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/dashboard-01/components/site-header.tsx",
      "content": "import { Separator } from \"@/registry/new-york/ui/separator\"\r\nimport { SidebarTrigger } from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function SiteHeader() {\r\n  return (\r\n    <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear\">\r\n      <div className=\"flex w-full items-center gap-1 px-4 lg:gap-2 lg:px-6\">\r\n        <SidebarTrigger className=\"-ml-1\" />\r\n        <Separator\r\n          orientation=\"vertical\"\r\n          className=\"mx-2 data-[orientation=vertical]:h-4\"\r\n        />\r\n        <h1 className=\"text-base font-medium\">Documents</h1>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "dashboard"
  ]
}