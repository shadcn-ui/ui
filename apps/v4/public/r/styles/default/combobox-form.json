{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "combobox-form",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "command",
    "form"
  ],
  "files": [
    {
      "path": "examples/combobox-form.tsx",
      "content": "\"use client\"\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { Check, ChevronsUpDown } from \"lucide-react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { toast } from \"@/registry/default/hooks/use-toast\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/registry/default/ui/command\"\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/default/ui/form\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/registry/default/ui/popover\"\r\n\r\nconst languages = [\r\n  { label: \"English\", value: \"en\" },\r\n  { label: \"French\", value: \"fr\" },\r\n  { label: \"German\", value: \"de\" },\r\n  { label: \"Spanish\", value: \"es\" },\r\n  { label: \"Portuguese\", value: \"pt\" },\r\n  { label: \"Russian\", value: \"ru\" },\r\n  { label: \"Japanese\", value: \"ja\" },\r\n  { label: \"Korean\", value: \"ko\" },\r\n  { label: \"Chinese\", value: \"zh\" },\r\n] as const\r\n\r\nconst FormSchema = z.object({\r\n  language: z.string({\r\n    required_error: \"Please select a language.\",\r\n  }),\r\n})\r\n\r\nexport default function ComboboxForm() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n  })\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    toast({\r\n      title: \"You submitted the following values:\",\r\n      description: (\r\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"language\"\r\n          render={({ field }) => (\r\n            <FormItem className=\"flex flex-col\">\r\n              <FormLabel>Language</FormLabel>\r\n              <Popover>\r\n                <PopoverTrigger asChild>\r\n                  <FormControl>\r\n                    <Button\r\n                      variant=\"outline\"\r\n                      role=\"combobox\"\r\n                      className={cn(\r\n                        \"w-[200px] justify-between\",\r\n                        !field.value && \"text-muted-foreground\"\r\n                      )}\r\n                    >\r\n                      {field.value\r\n                        ? languages.find(\r\n                            (language) => language.value === field.value\r\n                          )?.label\r\n                        : \"Select language\"}\r\n                      <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n                    </Button>\r\n                  </FormControl>\r\n                </PopoverTrigger>\r\n                <PopoverContent className=\"w-[200px] p-0\">\r\n                  <Command>\r\n                    <CommandInput placeholder=\"Search language...\" />\r\n                    <CommandList>\r\n                      <CommandEmpty>No language found.</CommandEmpty>\r\n                      <CommandGroup>\r\n                        {languages.map((language) => (\r\n                          <CommandItem\r\n                            value={language.label}\r\n                            key={language.value}\r\n                            onSelect={() => {\r\n                              form.setValue(\"language\", language.value)\r\n                            }}\r\n                          >\r\n                            {language.label}\r\n                            <Check\r\n                              className={cn(\r\n                                \"ml-auto\",\r\n                                language.value === field.value\r\n                                  ? \"opacity-100\"\r\n                                  : \"opacity-0\"\r\n                              )}\r\n                            />\r\n                          </CommandItem>\r\n                        ))}\r\n                      </CommandGroup>\r\n                    </CommandList>\r\n                  </Command>\r\n                </PopoverContent>\r\n              </Popover>\r\n              <FormDescription>\r\n                This is the language that will be used in the dashboard.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}