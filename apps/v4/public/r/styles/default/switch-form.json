{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "switch-form",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "switch",
    "form"
  ],
  "files": [
    {
      "path": "examples/switch-form.tsx",
      "content": "\"use client\"\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\n\r\nimport { toast } from \"@/registry/default/hooks/use-toast\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n} from \"@/registry/default/ui/form\"\r\nimport { Switch } from \"@/registry/default/ui/switch\"\r\n\r\nconst FormSchema = z.object({\r\n  marketing_emails: z.boolean().default(false).optional(),\r\n  security_emails: z.boolean(),\r\n})\r\n\r\nexport default function SwitchForm() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n    defaultValues: {\r\n      security_emails: true,\r\n    },\r\n  })\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    toast({\r\n      title: \"You submitted the following values:\",\r\n      description: (\r\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"w-full space-y-6\">\r\n        <div>\r\n          <h3 className=\"mb-4 text-lg font-medium\">Email Notifications</h3>\r\n          <div className=\"space-y-4\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"marketing_emails\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <FormLabel className=\"text-base\">\r\n                      Marketing emails\r\n                    </FormLabel>\r\n                    <FormDescription>\r\n                      Receive emails about new products, features, and more.\r\n                    </FormDescription>\r\n                  </div>\r\n                  <FormControl>\r\n                    <Switch\r\n                      checked={field.value}\r\n                      onCheckedChange={field.onChange}\r\n                    />\r\n                  </FormControl>\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name=\"security_emails\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <FormLabel className=\"text-base\">Security emails</FormLabel>\r\n                    <FormDescription>\r\n                      Receive emails about your account security.\r\n                    </FormDescription>\r\n                  </div>\r\n                  <FormControl>\r\n                    <Switch\r\n                      checked={field.value}\r\n                      onCheckedChange={field.onChange}\r\n                      disabled\r\n                      aria-readonly\r\n                    />\r\n                  </FormControl>\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}