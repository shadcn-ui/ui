{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "breadcrumb-responsive",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "breadcrumb"
  ],
  "files": [
    {
      "path": "examples/breadcrumb-responsive.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport Link from \"next/link\"\r\n\r\nimport { useMediaQuery } from \"@/hooks/use-media-query\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbEllipsis,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/registry/default/ui/breadcrumb\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport {\r\n  Drawer,\r\n  DrawerClose,\r\n  DrawerContent,\r\n  DrawerDescription,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerTitle,\r\n  DrawerTrigger,\r\n} from \"@/registry/default/ui/drawer\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/default/ui/dropdown-menu\"\r\n\r\nconst items = [\r\n  { href: \"#\", label: \"Home\" },\r\n  { href: \"#\", label: \"Documentation\" },\r\n  { href: \"#\", label: \"Building Your Application\" },\r\n  { href: \"#\", label: \"Data Fetching\" },\r\n  { label: \"Caching and Revalidating\" },\r\n]\r\n\r\nconst ITEMS_TO_DISPLAY = 3\r\n\r\nexport default function BreadcrumbResponsive() {\r\n  const [open, setOpen] = React.useState(false)\r\n  const isDesktop = useMediaQuery(\"(min-width: 768px)\")\r\n\r\n  return (\r\n    <Breadcrumb>\r\n      <BreadcrumbList>\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href={items[0].href}>{items[0].label}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbSeparator />\r\n        {items.length > ITEMS_TO_DISPLAY ? (\r\n          <>\r\n            <BreadcrumbItem>\r\n              {isDesktop ? (\r\n                <DropdownMenu open={open} onOpenChange={setOpen}>\r\n                  <DropdownMenuTrigger\r\n                    className=\"flex items-center gap-1\"\r\n                    aria-label=\"Toggle menu\"\r\n                  >\r\n                    <BreadcrumbEllipsis className=\"h-4 w-4\" />\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"start\">\r\n                    {items.slice(1, -2).map((item, index) => (\r\n                      <DropdownMenuItem key={index}>\r\n                        <Link href={item.href ? item.href : \"#\"}>\r\n                          {item.label}\r\n                        </Link>\r\n                      </DropdownMenuItem>\r\n                    ))}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              ) : (\r\n                <Drawer open={open} onOpenChange={setOpen}>\r\n                  <DrawerTrigger aria-label=\"Toggle Menu\">\r\n                    <BreadcrumbEllipsis className=\"h-4 w-4\" />\r\n                  </DrawerTrigger>\r\n                  <DrawerContent>\r\n                    <DrawerHeader className=\"text-left\">\r\n                      <DrawerTitle>Navigate to</DrawerTitle>\r\n                      <DrawerDescription>\r\n                        Select a page to navigate to.\r\n                      </DrawerDescription>\r\n                    </DrawerHeader>\r\n                    <div className=\"grid gap-1 px-4\">\r\n                      {items.slice(1, -2).map((item, index) => (\r\n                        <Link\r\n                          key={index}\r\n                          href={item.href ? item.href : \"#\"}\r\n                          className=\"py-1 text-sm\"\r\n                        >\r\n                          {item.label}\r\n                        </Link>\r\n                      ))}\r\n                    </div>\r\n                    <DrawerFooter className=\"pt-4\">\r\n                      <DrawerClose asChild>\r\n                        <Button variant=\"outline\">Close</Button>\r\n                      </DrawerClose>\r\n                    </DrawerFooter>\r\n                  </DrawerContent>\r\n                </Drawer>\r\n              )}\r\n            </BreadcrumbItem>\r\n            <BreadcrumbSeparator />\r\n          </>\r\n        ) : null}\r\n        {items.slice(-ITEMS_TO_DISPLAY + 1).map((item, index) => (\r\n          <BreadcrumbItem key={index}>\r\n            {item.href ? (\r\n              <>\r\n                <BreadcrumbLink\r\n                  asChild\r\n                  className=\"max-w-20 truncate md:max-w-none\"\r\n                >\r\n                  <Link href={item.href}>{item.label}</Link>\r\n                </BreadcrumbLink>\r\n                <BreadcrumbSeparator />\r\n              </>\r\n            ) : (\r\n              <BreadcrumbPage className=\"max-w-20 truncate md:max-w-none\">\r\n                {item.label}\r\n              </BreadcrumbPage>\r\n            )}\r\n          </BreadcrumbItem>\r\n        ))}\r\n      </BreadcrumbList>\r\n    </Breadcrumb>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}