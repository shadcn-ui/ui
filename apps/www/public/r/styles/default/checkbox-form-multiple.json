{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox-form-multiple",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "checkbox",
    "form"
  ],
  "files": [
    {
      "path": "examples/checkbox-form-multiple.tsx",
      "content": "\"use client\"\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\n\r\nimport { toast } from \"@/registry/default/hooks/use-toast\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/default/ui/form\"\r\n\r\nconst items = [\r\n  {\r\n    id: \"recents\",\r\n    label: \"Recents\",\r\n  },\r\n  {\r\n    id: \"home\",\r\n    label: \"Home\",\r\n  },\r\n  {\r\n    id: \"applications\",\r\n    label: \"Applications\",\r\n  },\r\n  {\r\n    id: \"desktop\",\r\n    label: \"Desktop\",\r\n  },\r\n  {\r\n    id: \"downloads\",\r\n    label: \"Downloads\",\r\n  },\r\n  {\r\n    id: \"documents\",\r\n    label: \"Documents\",\r\n  },\r\n] as const\r\n\r\nconst FormSchema = z.object({\r\n  items: z.array(z.string()).refine((value) => value.some((item) => item), {\r\n    message: \"You have to select at least one item.\",\r\n  }),\r\n})\r\n\r\nexport default function CheckboxReactHookFormMultiple() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n    defaultValues: {\r\n      items: [\"recents\", \"home\"],\r\n    },\r\n  })\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    toast({\r\n      title: \"You submitted the following values:\",\r\n      description: (\r\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"items\"\r\n          render={() => (\r\n            <FormItem>\r\n              <div className=\"mb-4\">\r\n                <FormLabel className=\"text-base\">Sidebar</FormLabel>\r\n                <FormDescription>\r\n                  Select the items you want to display in the sidebar.\r\n                </FormDescription>\r\n              </div>\r\n              {items.map((item) => (\r\n                <FormField\r\n                  key={item.id}\r\n                  control={form.control}\r\n                  name=\"items\"\r\n                  render={({ field }) => {\r\n                    return (\r\n                      <FormItem\r\n                        key={item.id}\r\n                        className=\"flex flex-row items-start space-x-3 space-y-0\"\r\n                      >\r\n                        <FormControl>\r\n                          <Checkbox\r\n                            checked={field.value?.includes(item.id)}\r\n                            onCheckedChange={(checked) => {\r\n                              return checked\r\n                                ? field.onChange([...field.value, item.id])\r\n                                : field.onChange(\r\n                                    field.value?.filter(\r\n                                      (value) => value !== item.id\r\n                                    )\r\n                                  )\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormLabel className=\"font-normal\">\r\n                          {item.label}\r\n                        </FormLabel>\r\n                      </FormItem>\r\n                    )\r\n                  }}\r\n                />\r\n              ))}\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}