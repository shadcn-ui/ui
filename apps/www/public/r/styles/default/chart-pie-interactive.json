{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "chart-pie-interactive",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "card",
    "chart"
  ],
  "files": [
    {
      "path": "charts/chart-pie-interactive.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Label, Pie, PieChart, Sector } from \"recharts\"\r\nimport { PieSectorDataItem } from \"recharts/types/polar/Pie\"\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/registry/default/ui/card\"\r\nimport {\r\n  ChartConfig,\r\n  ChartContainer,\r\n  ChartStyle,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n} from \"@/registry/default/ui/chart\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/registry/default/ui/select\"\nconst desktopData = [\r\n  { month: \"january\", desktop: 186, fill: \"var(--color-january)\" },\r\n  { month: \"february\", desktop: 305, fill: \"var(--color-february)\" },\r\n  { month: \"march\", desktop: 237, fill: \"var(--color-march)\" },\r\n  { month: \"april\", desktop: 173, fill: \"var(--color-april)\" },\r\n  { month: \"may\", desktop: 209, fill: \"var(--color-may)\" },\r\n]\r\n\r\nconst chartConfig = {\r\n  visitors: {\r\n    label: \"Visitors\",\r\n  },\r\n  desktop: {\r\n    label: \"Desktop\",\r\n  },\r\n  mobile: {\r\n    label: \"Mobile\",\r\n  },\r\n  january: {\r\n    label: \"January\",\r\n    color: \"hsl(var(--chart-1))\",\r\n  },\r\n  february: {\r\n    label: \"February\",\r\n    color: \"hsl(var(--chart-2))\",\r\n  },\r\n  march: {\r\n    label: \"March\",\r\n    color: \"hsl(var(--chart-3))\",\r\n  },\r\n  april: {\r\n    label: \"April\",\r\n    color: \"hsl(var(--chart-4))\",\r\n  },\r\n  may: {\r\n    label: \"May\",\r\n    color: \"hsl(var(--chart-5))\",\r\n  },\r\n} satisfies ChartConfig\r\n\r\nexport default function Component() {\r\n  const id = \"pie-interactive\"\r\n  const [activeMonth, setActiveMonth] = React.useState(desktopData[0].month)\r\n\r\n  const activeIndex = React.useMemo(\r\n    () => desktopData.findIndex((item) => item.month === activeMonth),\r\n    [activeMonth]\r\n  )\r\n  const months = React.useMemo(() => desktopData.map((item) => item.month), [])\r\n\r\n  return (\r\n    <Card data-chart={id} className=\"flex flex-col\">\r\n      <ChartStyle id={id} config={chartConfig} />\r\n      <CardHeader className=\"flex-row items-start space-y-0 pb-0\">\r\n        <div className=\"grid gap-1\">\r\n          <CardTitle>Pie Chart - Interactive</CardTitle>\r\n          <CardDescription>January - June 2024</CardDescription>\r\n        </div>\r\n        <Select value={activeMonth} onValueChange={setActiveMonth}>\r\n          <SelectTrigger\r\n            className=\"ml-auto h-7 w-[130px] rounded-lg pl-2.5\"\r\n            aria-label=\"Select a value\"\r\n          >\r\n            <SelectValue placeholder=\"Select month\" />\r\n          </SelectTrigger>\r\n          <SelectContent align=\"end\" className=\"rounded-xl\">\r\n            {months.map((key) => {\r\n              const config = chartConfig[key as keyof typeof chartConfig]\r\n\r\n              if (!config) {\r\n                return null\r\n              }\r\n\r\n              return (\r\n                <SelectItem\r\n                  key={key}\r\n                  value={key}\r\n                  className=\"rounded-lg [&_span]:flex\"\r\n                >\r\n                  <div className=\"flex items-center gap-2 text-xs\">\r\n                    <span\r\n                      className=\"flex h-3 w-3 shrink-0 rounded-sm\"\r\n                      style={{\r\n                        backgroundColor: `var(--color-${key})`,\r\n                      }}\r\n                    />\r\n                    {config?.label}\r\n                  </div>\r\n                </SelectItem>\r\n              )\r\n            })}\r\n          </SelectContent>\r\n        </Select>\r\n      </CardHeader>\r\n      <CardContent className=\"flex flex-1 justify-center pb-0\">\r\n        <ChartContainer\r\n          id={id}\r\n          config={chartConfig}\r\n          className=\"mx-auto aspect-square w-full max-w-[300px]\"\r\n        >\r\n          <PieChart>\r\n            <ChartTooltip\r\n              cursor={false}\r\n              content={<ChartTooltipContent hideLabel />}\r\n            />\r\n            <Pie\r\n              data={desktopData}\r\n              dataKey=\"desktop\"\r\n              nameKey=\"month\"\r\n              innerRadius={60}\r\n              strokeWidth={5}\r\n              activeIndex={activeIndex}\r\n              activeShape={({\r\n                outerRadius = 0,\r\n                ...props\r\n              }: PieSectorDataItem) => (\r\n                <g>\r\n                  <Sector {...props} outerRadius={outerRadius + 10} />\r\n                  <Sector\r\n                    {...props}\r\n                    outerRadius={outerRadius + 25}\r\n                    innerRadius={outerRadius + 12}\r\n                  />\r\n                </g>\r\n              )}\r\n            >\r\n              <Label\r\n                content={({ viewBox }) => {\r\n                  if (viewBox && \"cx\" in viewBox && \"cy\" in viewBox) {\r\n                    return (\r\n                      <text\r\n                        x={viewBox.cx}\r\n                        y={viewBox.cy}\r\n                        textAnchor=\"middle\"\r\n                        dominantBaseline=\"middle\"\r\n                      >\r\n                        <tspan\r\n                          x={viewBox.cx}\r\n                          y={viewBox.cy}\r\n                          className=\"fill-foreground text-3xl font-bold\"\r\n                        >\r\n                          {desktopData[activeIndex].desktop.toLocaleString()}\r\n                        </tspan>\r\n                        <tspan\r\n                          x={viewBox.cx}\r\n                          y={(viewBox.cy || 0) + 24}\r\n                          className=\"fill-muted-foreground\"\r\n                        >\r\n                          Visitors\r\n                        </tspan>\r\n                      </text>\r\n                    )\r\n                  }\r\n                }}\r\n              />\r\n            </Pie>\r\n          </PieChart>\r\n        </ChartContainer>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:block",
      "target": ""
    }
  ],
  "categories": [
    "charts",
    "charts-pie"
  ]
}