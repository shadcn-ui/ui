{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-group",
  "type": "registry:ui",
  "dependencies": [
    "class-variance-authority"
  ],
  "registryDependencies": [
    "input"
  ],
  "files": [
    {
      "path": "registry/new-york-v4/ui/input-group.tsx",
      "content": "\"use client\"\n\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/registry/new-york-v4/ui/button\"\n\nfunction InputGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"input-group\"\n      role=\"presentation\"\n      className={cn(\n        \"group/input-group border-input dark:bg-input/30 relative isolate flex h-9 w-full items-center rounded-md border shadow-xs transition-[color,box-shadow] outline-none\",\n        \"has-[>[data-align=block-end]]:flex-col has-[>[data-align=block-start]]:flex-col\",\n        \"has-[>textarea]:h-auto\",\n        \"has-[>[data-align=block-end]]:[&>input]:pt-3 has-[>[data-align=block-start]]:[&>input]:pb-3\",\n\n        // Error state.\n        \"has-[[aria-invalid=true]]:ring-destructive/20 has-[[aria-invalid=true]]:border-destructive dark:has-[[aria-invalid=true]]:ring-destructive/40\",\n\n        // Focus state.\n        \"has-[input:focus-visible,textarea:focus-visible]:border-ring has-[input:focus-visible,textarea:focus-visible]:ring-ring/50 has-[input:focus-visible,textarea:focus-visible]:ring-[3px]\",\n        \"has-[[data-slot][aria-invalid=true]]:ring-destructive/20 has-[[data-slot][aria-invalid=true]]:border-destructive dark:has-[[data-slot][aria-invalid=true]]:ring-destructive/40\",\n\n        // Child input overrides (direct children only).\n        \"[&>input]:flex-1 [&>input]:rounded-none [&>input]:border-0 [&>input]:bg-transparent [&>input]:shadow-none dark:[&>input]:bg-transparent [&>input:focus-visible]:ring-0\",\n        \"[&>textarea]:flex-1 [&>textarea]:resize-none [&>textarea]:rounded-none [&>textarea]:border-0 [&>textarea]:bg-transparent [&>textarea]:shadow-none dark:[&>textarea]:bg-transparent [&>textarea:focus-visible]:ring-0\",\n\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction InputGroupAddon({\n  className,\n  align = \"inline-start\",\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  align?: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\"\n}) {\n  return (\n    <div\n      role=\"group\"\n      data-slot=\"input-group-addon\"\n      data-align={align}\n      className={cn(\n        \"text-muted-foreground flex h-auto cursor-text items-center justify-center gap-2 py-1.5 text-sm font-medium select-none\",\n\n        // Alignment and button adjustments.a\n        \"data-[align=inline-end]:order-last data-[align=inline-end]:pr-3\",\n        \"data-[align=inline-start]:order-first data-[align=inline-start]:pl-3\",\n        \"data-[align=inline-end]:has-[>button]:mr-[-0.4rem] data-[align=inline-end]:has-[>kbd]:mr-[-0.35rem]\",\n        \"data-[align=inline-start]:has-[>button]:ml-[-0.45rem] data-[align=inline-start]:has-[>kbd]:ml-[-0.35rem]\",\n\n        \"data-[align=block-start]:order-first data-[align=block-start]:w-full data-[align=block-start]:justify-start data-[align=block-start]:px-3 data-[align=block-start]:pt-3 data-[align=block-start]:[.border-b]:pb-3\",\n        \"data-[align=block-end]:order-last data-[align=block-end]:w-full data-[align=block-end]:justify-start data-[align=block-end]:px-3 data-[align=block-end]:pb-3 data-[align=block-end]:[.border-t]:pt-3\",\n\n        // Children.\n        \"[&>svg:not([class*='size-'])]:size-4\",\n        \"[&>kbd]:rounded-[calc(var(--radius)-5px)]\",\n        \"group-data-[disabled=true]/input-group:opacity-50\",\n\n        className\n      )}\n      onClick={(e) => {\n        if ((e.target as HTMLElement).closest(\"button\")) {\n          return\n        }\n        e.currentTarget.parentElement?.querySelector(\"input\")?.focus()\n      }}\n      {...props}\n    />\n  )\n}\n\nconst inputGroupButtonVariants = cva(\"text-sm shadow-none\", {\n  variants: {\n    size: {\n      default:\n        \"h-6 gap-1 px-1.5 has-[>svg:first-child]:pl-2 has-[>svg:last-child]:pr-2 rounded-[calc(var(--radius)-5px)]\",\n      icon: \"size-6 rounded-[calc(var(--radius)-5px)] p-0 has-[>svg]:p-0\",\n      sm: \"h-7 px-2.5 has-[>svg:first-child]:pl-2 has-[>svg:last-child]:pr-2 gap-1.5 rounded-md\",\n      \"icon-sm\": \"size-7 p-0 has-[>svg]:p-0\",\n    },\n  },\n  defaultVariants: {\n    size: \"icon\",\n  },\n})\n\nfunction InputGroupButton({\n  className,\n  type = \"button\",\n  variant = \"ghost\",\n  size = \"icon\",\n  ...props\n}: Omit<React.ComponentProps<typeof Button>, \"size\"> &\n  VariantProps<typeof inputGroupButtonVariants>) {\n  return (\n    <Button\n      type={type}\n      data-size={size}\n      variant={variant}\n      className={cn(inputGroupButtonVariants({ size }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction InputGroupText({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      className={cn(\n        \"text-muted-foreground flex items-center gap-2 text-sm [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { InputGroup, InputGroupAddon, InputGroupButton, InputGroupText }\n",
      "type": "registry:ui"
    }
  ]
}