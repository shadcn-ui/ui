{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker-form",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "dependencies": [
    "date-fns"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "form",
    "popover"
  ],
  "files": [
    {
      "path": "examples/date-picker-form.tsx",
      "content": "\"use client\"\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { format } from \"date-fns\"\r\nimport { CalendarIcon } from \"lucide-react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { z } from \"zod\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { toast } from \"@/registry/new-york/hooks/use-toast\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport { Calendar } from \"@/registry/new-york/ui/calendar\"\r\nimport {\r\n  Form,\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/registry/new-york/ui/popover\"\r\n\r\nconst FormSchema = z.object({\r\n  dob: z.date({\r\n    required_error: \"A date of birth is required.\",\r\n  }),\r\n})\r\n\r\nexport default function DatePickerForm() {\r\n  const form = useForm<z.infer<typeof FormSchema>>({\r\n    resolver: zodResolver(FormSchema),\r\n  })\r\n\r\n  function onSubmit(data: z.infer<typeof FormSchema>) {\r\n    toast({\r\n      title: \"You submitted the following values:\",\r\n      description: (\r\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\r\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\r\n        </pre>\r\n      ),\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        <FormField\r\n          control={form.control}\r\n          name=\"dob\"\r\n          render={({ field }) => (\r\n            <FormItem className=\"flex flex-col\">\r\n              <FormLabel>Date of birth</FormLabel>\r\n              <Popover>\r\n                <PopoverTrigger asChild>\r\n                  <FormControl>\r\n                    <Button\r\n                      variant={\"outline\"}\r\n                      className={cn(\r\n                        \"w-[240px] pl-3 text-left font-normal\",\r\n                        !field.value && \"text-muted-foreground\"\r\n                      )}\r\n                    >\r\n                      {field.value ? (\r\n                        format(field.value, \"PPP\")\r\n                      ) : (\r\n                        <span>Pick a date</span>\r\n                      )}\r\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\r\n                    </Button>\r\n                  </FormControl>\r\n                </PopoverTrigger>\r\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                  <Calendar\r\n                    mode=\"single\"\r\n                    selected={field.value}\r\n                    onSelect={field.onChange}\r\n                    disabled={(date) =>\r\n                      date > new Date() || date < new Date(\"1900-01-01\")\r\n                    }\r\n                    initialFocus\r\n                  />\r\n                </PopoverContent>\r\n              </Popover>\r\n              <FormDescription>\r\n                Your date of birth is used to calculate your age.\r\n              </FormDescription>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n        <Button type=\"submit\">Submit</Button>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}