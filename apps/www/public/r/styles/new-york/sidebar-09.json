{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sidebar-09",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "Collapsible nested sidebars.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "collapsible",
    "dropdown-menu",
    "avatar",
    "switch",
    "label"
  ],
  "files": [
    {
      "path": "blocks/sidebar-09/page.tsx",
      "content": "import { AppSidebar } from \"@/registry/new-york/blocks/sidebar-09/components/app-sidebar\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/registry/new-york/ui/breadcrumb\"\r\nimport { Separator } from \"@/registry/new-york/ui/separator\"\r\nimport {\r\n  SidebarInset,\r\n  SidebarProvider,\r\n  SidebarTrigger,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport default function Page() {\r\n  return (\r\n    <SidebarProvider\r\n      style={\r\n        {\r\n          \"--sidebar-width\": \"350px\",\r\n        } as React.CSSProperties\r\n      }\r\n    >\r\n      <AppSidebar />\r\n      <SidebarInset>\r\n        <header className=\"sticky top-0 flex shrink-0 items-center gap-2 border-b bg-background p-4\">\r\n          <SidebarTrigger className=\"-ml-1\" />\r\n          <Separator orientation=\"vertical\" className=\"mr-2 h-4\" />\r\n          <Breadcrumb>\r\n            <BreadcrumbList>\r\n              <BreadcrumbItem className=\"hidden md:block\">\r\n                <BreadcrumbLink href=\"#\">All Inboxes</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbSeparator className=\"hidden md:block\" />\r\n              <BreadcrumbItem>\r\n                <BreadcrumbPage>Inbox</BreadcrumbPage>\r\n              </BreadcrumbItem>\r\n            </BreadcrumbList>\r\n          </Breadcrumb>\r\n        </header>\r\n        <div className=\"flex flex-1 flex-col gap-4 p-4\">\r\n          {Array.from({ length: 24 }).map((_, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"aspect-video h-12 w-full rounded-lg bg-muted/50\"\r\n            />\r\n          ))}\r\n        </div>\r\n      </SidebarInset>\r\n    </SidebarProvider>\r\n  )\r\n}\r\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/sidebar-09/components/app-sidebar.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ArchiveX, Command, File, Inbox, Send, Trash2 } from \"lucide-react\"\r\n\r\nimport { NavUser } from \"@/registry/new-york/blocks/sidebar-09/components/nav-user\"\r\nimport { Label } from \"@/registry/new-york/ui/label\"\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupContent,\r\n  SidebarHeader,\r\n  SidebarInput,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\nimport { Switch } from \"@/registry/new-york/ui/switch\"\r\n\r\n// This is sample data\r\nconst data = {\r\n  user: {\r\n    name: \"shadcn\",\r\n    email: \"m@example.com\",\r\n    avatar: \"/avatars/shadcn.jpg\",\r\n  },\r\n  navMain: [\r\n    {\r\n      title: \"Inbox\",\r\n      url: \"#\",\r\n      icon: Inbox,\r\n      isActive: true,\r\n    },\r\n    {\r\n      title: \"Drafts\",\r\n      url: \"#\",\r\n      icon: File,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"Sent\",\r\n      url: \"#\",\r\n      icon: Send,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"Junk\",\r\n      url: \"#\",\r\n      icon: ArchiveX,\r\n      isActive: false,\r\n    },\r\n    {\r\n      title: \"Trash\",\r\n      url: \"#\",\r\n      icon: Trash2,\r\n      isActive: false,\r\n    },\r\n  ],\r\n  mails: [\r\n    {\r\n      name: \"William Smith\",\r\n      email: \"williamsmith@example.com\",\r\n      subject: \"Meeting Tomorrow\",\r\n      date: \"09:34 AM\",\r\n      teaser:\r\n        \"Hi team, just a reminder about our meeting tomorrow at 10 AM.\\nPlease come prepared with your project updates.\",\r\n    },\r\n    {\r\n      name: \"Alice Smith\",\r\n      email: \"alicesmith@example.com\",\r\n      subject: \"Re: Project Update\",\r\n      date: \"Yesterday\",\r\n      teaser:\r\n        \"Thanks for the update. The progress looks great so far.\\nLet's schedule a call to discuss the next steps.\",\r\n    },\r\n    {\r\n      name: \"Bob Johnson\",\r\n      email: \"bobjohnson@example.com\",\r\n      subject: \"Weekend Plans\",\r\n      date: \"2 days ago\",\r\n      teaser:\r\n        \"Hey everyone! I'm thinking of organizing a team outing this weekend.\\nWould you be interested in a hiking trip or a beach day?\",\r\n    },\r\n    {\r\n      name: \"Emily Davis\",\r\n      email: \"emilydavis@example.com\",\r\n      subject: \"Re: Question about Budget\",\r\n      date: \"2 days ago\",\r\n      teaser:\r\n        \"I've reviewed the budget numbers you sent over.\\nCan we set up a quick call to discuss some potential adjustments?\",\r\n    },\r\n    {\r\n      name: \"Michael Wilson\",\r\n      email: \"michaelwilson@example.com\",\r\n      subject: \"Important Announcement\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"Please join us for an all-hands meeting this Friday at 3 PM.\\nWe have some exciting news to share about the company's future.\",\r\n    },\r\n    {\r\n      name: \"Sarah Brown\",\r\n      email: \"sarahbrown@example.com\",\r\n      subject: \"Re: Feedback on Proposal\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"Thank you for sending over the proposal. I've reviewed it and have some thoughts.\\nCould we schedule a meeting to discuss my feedback in detail?\",\r\n    },\r\n    {\r\n      name: \"David Lee\",\r\n      email: \"davidlee@example.com\",\r\n      subject: \"New Project Idea\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"I've been brainstorming and came up with an interesting project concept.\\nDo you have time this week to discuss its potential impact and feasibility?\",\r\n    },\r\n    {\r\n      name: \"Olivia Wilson\",\r\n      email: \"oliviawilson@example.com\",\r\n      subject: \"Vacation Plans\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"Just a heads up that I'll be taking a two-week vacation next month.\\nI'll make sure all my projects are up to date before I leave.\",\r\n    },\r\n    {\r\n      name: \"James Martin\",\r\n      email: \"jamesmartin@example.com\",\r\n      subject: \"Re: Conference Registration\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"I've completed the registration for the upcoming tech conference.\\nLet me know if you need any additional information from my end.\",\r\n    },\r\n    {\r\n      name: \"Sophia White\",\r\n      email: \"sophiawhite@example.com\",\r\n      subject: \"Team Dinner\",\r\n      date: \"1 week ago\",\r\n      teaser:\r\n        \"To celebrate our recent project success, I'd like to organize a team dinner.\\nAre you available next Friday evening? Please let me know your preferences.\",\r\n    },\r\n  ],\r\n}\r\n\r\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n  // Note: I'm using state to show active item.\r\n  // IRL you should use the url/router.\r\n  const [activeItem, setActiveItem] = React.useState(data.navMain[0])\r\n  const [mails, setMails] = React.useState(data.mails)\r\n  const { setOpen } = useSidebar()\r\n\r\n  return (\r\n    <Sidebar\r\n      collapsible=\"icon\"\r\n      className=\"overflow-hidden [&>[data-sidebar=sidebar]]:flex-row\"\r\n      {...props}\r\n    >\r\n      {/* This is the first sidebar */}\r\n      {/* We disable collapsible and adjust width to icon. */}\r\n      {/* This will make the sidebar appear as icons. */}\r\n      <Sidebar\r\n        collapsible=\"none\"\r\n        className=\"!w-[calc(var(--sidebar-width-icon)_+_1px)] border-r\"\r\n      >\r\n        <SidebarHeader>\r\n          <SidebarMenu>\r\n            <SidebarMenuItem>\r\n              <SidebarMenuButton size=\"lg\" asChild className=\"md:h-8 md:p-0\">\r\n                <a href=\"#\">\r\n                  <div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\r\n                    <Command className=\"size-4\" />\r\n                  </div>\r\n                  <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                    <span className=\"truncate font-semibold\">Acme Inc</span>\r\n                    <span className=\"truncate text-xs\">Enterprise</span>\r\n                  </div>\r\n                </a>\r\n              </SidebarMenuButton>\r\n            </SidebarMenuItem>\r\n          </SidebarMenu>\r\n        </SidebarHeader>\r\n        <SidebarContent>\r\n          <SidebarGroup>\r\n            <SidebarGroupContent className=\"px-1.5 md:px-0\">\r\n              <SidebarMenu>\r\n                {data.navMain.map((item) => (\r\n                  <SidebarMenuItem key={item.title}>\r\n                    <SidebarMenuButton\r\n                      tooltip={{\r\n                        children: item.title,\r\n                        hidden: false,\r\n                      }}\r\n                      onClick={() => {\r\n                        setActiveItem(item)\r\n                        const mail = data.mails.sort(() => Math.random() - 0.5)\r\n                        setMails(\r\n                          mail.slice(\r\n                            0,\r\n                            Math.max(5, Math.floor(Math.random() * 10) + 1)\r\n                          )\r\n                        )\r\n                        setOpen(true)\r\n                      }}\r\n                      isActive={activeItem?.title === item.title}\r\n                      className=\"px-2.5 md:px-2\"\r\n                    >\r\n                      <item.icon />\r\n                      <span>{item.title}</span>\r\n                    </SidebarMenuButton>\r\n                  </SidebarMenuItem>\r\n                ))}\r\n              </SidebarMenu>\r\n            </SidebarGroupContent>\r\n          </SidebarGroup>\r\n        </SidebarContent>\r\n        <SidebarFooter>\r\n          <NavUser user={data.user} />\r\n        </SidebarFooter>\r\n      </Sidebar>\r\n\r\n      {/* This is the second sidebar */}\r\n      {/* We disable collapsible and let it fill remaining space */}\r\n      <Sidebar collapsible=\"none\" className=\"hidden flex-1 md:flex\">\r\n        <SidebarHeader className=\"gap-3.5 border-b p-4\">\r\n          <div className=\"flex w-full items-center justify-between\">\r\n            <div className=\"text-base font-medium text-foreground\">\r\n              {activeItem?.title}\r\n            </div>\r\n            <Label className=\"flex items-center gap-2 text-sm\">\r\n              <span>Unreads</span>\r\n              <Switch className=\"shadow-none\" />\r\n            </Label>\r\n          </div>\r\n          <SidebarInput placeholder=\"Type to search...\" />\r\n        </SidebarHeader>\r\n        <SidebarContent>\r\n          <SidebarGroup className=\"px-0\">\r\n            <SidebarGroupContent>\r\n              {mails.map((mail) => (\r\n                <a\r\n                  href=\"#\"\r\n                  key={mail.email}\r\n                  className=\"flex flex-col items-start gap-2 whitespace-nowrap border-b p-4 text-sm leading-tight last:border-b-0 hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\"\r\n                >\r\n                  <div className=\"flex w-full items-center gap-2\">\r\n                    <span>{mail.name}</span>{\" \"}\r\n                    <span className=\"ml-auto text-xs\">{mail.date}</span>\r\n                  </div>\r\n                  <span className=\"font-medium\">{mail.subject}</span>\r\n                  <span className=\"line-clamp-2 w-[260px] whitespace-break-spaces text-xs\">\r\n                    {mail.teaser}\r\n                  </span>\r\n                </a>\r\n              ))}\r\n            </SidebarGroupContent>\r\n          </SidebarGroup>\r\n        </SidebarContent>\r\n      </Sidebar>\r\n    </Sidebar>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "blocks/sidebar-09/components/nav-user.tsx",
      "content": "\"use client\"\r\n\r\nimport {\r\n  BadgeCheck,\r\n  Bell,\r\n  ChevronsUpDown,\r\n  CreditCard,\r\n  LogOut,\r\n  Sparkles,\r\n} from \"lucide-react\"\r\n\r\nimport {\r\n  Avatar,\r\n  AvatarFallback,\r\n  AvatarImage,\r\n} from \"@/registry/new-york/ui/avatar\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/new-york/ui/dropdown-menu\"\r\nimport {\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport function NavUser({\r\n  user,\r\n}: {\r\n  user: {\r\n    name: string\r\n    email: string\r\n    avatar: string\r\n  }\r\n}) {\r\n  const { isMobile } = useSidebar()\r\n\r\n  return (\r\n    <SidebarMenu>\r\n      <SidebarMenuItem>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <SidebarMenuButton\r\n              size=\"lg\"\r\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground md:h-8 md:p-0\"\r\n            >\r\n              <Avatar className=\"h-8 w-8 rounded-lg\">\r\n                <AvatarImage src={user.avatar} alt={user.name} />\r\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\r\n              </Avatar>\r\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                <span className=\"truncate font-semibold\">{user.name}</span>\r\n                <span className=\"truncate text-xs\">{user.email}</span>\r\n              </div>\r\n              <ChevronsUpDown className=\"ml-auto size-4\" />\r\n            </SidebarMenuButton>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent\r\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\r\n            side={isMobile ? \"bottom\" : \"right\"}\r\n            align=\"end\"\r\n            sideOffset={4}\r\n          >\r\n            <DropdownMenuLabel className=\"p-0 font-normal\">\r\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\r\n                <Avatar className=\"h-8 w-8 rounded-lg\">\r\n                  <AvatarImage src={user.avatar} alt={user.name} />\r\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\r\n                </Avatar>\r\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                  <span className=\"truncate font-semibold\">{user.name}</span>\r\n                  <span className=\"truncate text-xs\">{user.email}</span>\r\n                </div>\r\n              </div>\r\n            </DropdownMenuLabel>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem>\r\n                <Sparkles />\r\n                Upgrade to Pro\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem>\r\n                <BadgeCheck />\r\n                Account\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <CreditCard />\r\n                Billing\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem>\r\n                <Bell />\r\n                Notifications\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem>\r\n              <LogOut />\r\n              Log out\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </SidebarMenuItem>\r\n    </SidebarMenu>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}