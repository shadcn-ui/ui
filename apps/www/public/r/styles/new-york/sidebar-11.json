{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sidebar-11",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "description": "A sidebar with a collapsible file tree.",
  "registryDependencies": [
    "sidebar",
    "breadcrumb",
    "separator",
    "collapsible"
  ],
  "files": [
    {
      "path": "blocks/sidebar-11/page.tsx",
      "content": "import { AppSidebar } from \"@/registry/new-york/blocks/sidebar-11/components/app-sidebar\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  BreadcrumbList,\r\n  BreadcrumbPage,\r\n  BreadcrumbSeparator,\r\n} from \"@/registry/new-york/ui/breadcrumb\"\r\nimport { Separator } from \"@/registry/new-york/ui/separator\"\r\nimport {\r\n  SidebarInset,\r\n  SidebarProvider,\r\n  SidebarTrigger,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\nexport default function Page() {\r\n  return (\r\n    <SidebarProvider>\r\n      <AppSidebar />\r\n      <SidebarInset>\r\n        <header className=\"flex h-16 shrink-0 items-center gap-2 border-b px-4\">\r\n          <SidebarTrigger className=\"-ml-1\" />\r\n          <Separator orientation=\"vertical\" className=\"mr-2 h-4\" />\r\n          <Breadcrumb>\r\n            <BreadcrumbList>\r\n              <BreadcrumbItem className=\"hidden md:block\">\r\n                <BreadcrumbLink href=\"#\">components</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbSeparator className=\"hidden md:block\" />\r\n              <BreadcrumbItem className=\"hidden md:block\">\r\n                <BreadcrumbLink href=\"#\">ui</BreadcrumbLink>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbSeparator className=\"hidden md:block\" />\r\n              <BreadcrumbItem>\r\n                <BreadcrumbPage>button.tsx</BreadcrumbPage>\r\n              </BreadcrumbItem>\r\n            </BreadcrumbList>\r\n          </Breadcrumb>\r\n        </header>\r\n        <div className=\"flex flex-1 flex-col gap-4 p-4\">\r\n          <div className=\"grid auto-rows-min gap-4 md:grid-cols-3\">\r\n            <div className=\"aspect-video rounded-xl bg-muted/50\" />\r\n            <div className=\"aspect-video rounded-xl bg-muted/50\" />\r\n            <div className=\"aspect-video rounded-xl bg-muted/50\" />\r\n          </div>\r\n          <div className=\"min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min\" />\r\n        </div>\r\n      </SidebarInset>\r\n    </SidebarProvider>\r\n  )\r\n}\r\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "blocks/sidebar-11/components/app-sidebar.tsx",
      "content": "import * as React from \"react\"\r\nimport { ChevronRight, File, Folder } from \"lucide-react\"\r\n\r\nimport {\r\n  Collapsible,\r\n  CollapsibleContent,\r\n  CollapsibleTrigger,\r\n} from \"@/registry/new-york/ui/collapsible\"\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarGroup,\r\n  SidebarGroupContent,\r\n  SidebarGroupLabel,\r\n  SidebarMenu,\r\n  SidebarMenuBadge,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarMenuSub,\r\n  SidebarRail,\r\n} from \"@/registry/new-york/ui/sidebar\"\r\n\r\n// This is sample data.\r\nconst data = {\r\n  changes: [\r\n    {\r\n      file: \"README.md\",\r\n      state: \"M\",\r\n    },\r\n    {\r\n      file: \"api/hello/route.ts\",\r\n      state: \"U\",\r\n    },\r\n    {\r\n      file: \"app/layout.tsx\",\r\n      state: \"M\",\r\n    },\r\n  ],\r\n  tree: [\r\n    [\r\n      \"app\",\r\n      [\r\n        \"api\",\r\n        [\"hello\", [\"route.ts\"]],\r\n        \"page.tsx\",\r\n        \"layout.tsx\",\r\n        [\"blog\", [\"page.tsx\"]],\r\n      ],\r\n    ],\r\n    [\r\n      \"components\",\r\n      [\"ui\", \"button.tsx\", \"card.tsx\"],\r\n      \"header.tsx\",\r\n      \"footer.tsx\",\r\n    ],\r\n    [\"lib\", [\"util.ts\"]],\r\n    [\"public\", \"favicon.ico\", \"vercel.svg\"],\r\n    \".eslintrc.json\",\r\n    \".gitignore\",\r\n    \"next.config.js\",\r\n    \"tailwind.config.js\",\r\n    \"package.json\",\r\n    \"README.md\",\r\n  ],\r\n}\r\n\r\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n  return (\r\n    <Sidebar {...props}>\r\n      <SidebarContent>\r\n        <SidebarGroup>\r\n          <SidebarGroupLabel>Changes</SidebarGroupLabel>\r\n          <SidebarGroupContent>\r\n            <SidebarMenu>\r\n              {data.changes.map((item, index) => (\r\n                <SidebarMenuItem key={index}>\r\n                  <SidebarMenuButton>\r\n                    <File />\r\n                    {item.file}\r\n                  </SidebarMenuButton>\r\n                  <SidebarMenuBadge>{item.state}</SidebarMenuBadge>\r\n                </SidebarMenuItem>\r\n              ))}\r\n            </SidebarMenu>\r\n          </SidebarGroupContent>\r\n        </SidebarGroup>\r\n        <SidebarGroup>\r\n          <SidebarGroupLabel>Files</SidebarGroupLabel>\r\n          <SidebarGroupContent>\r\n            <SidebarMenu>\r\n              {data.tree.map((item, index) => (\r\n                <Tree key={index} item={item} />\r\n              ))}\r\n            </SidebarMenu>\r\n          </SidebarGroupContent>\r\n        </SidebarGroup>\r\n      </SidebarContent>\r\n      <SidebarRail />\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nfunction Tree({ item }: { item: string | any[] }) {\r\n  const [name, ...items] = Array.isArray(item) ? item : [item]\r\n\r\n  if (!items.length) {\r\n    return (\r\n      <SidebarMenuButton\r\n        isActive={name === \"button.tsx\"}\r\n        className=\"data-[active=true]:bg-transparent\"\r\n      >\r\n        <File />\r\n        {name}\r\n      </SidebarMenuButton>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SidebarMenuItem>\r\n      <Collapsible\r\n        className=\"group/collapsible [&[data-state=open]>button>svg:first-child]:rotate-90\"\r\n        defaultOpen={name === \"components\" || name === \"ui\"}\r\n      >\r\n        <CollapsibleTrigger asChild>\r\n          <SidebarMenuButton>\r\n            <ChevronRight className=\"transition-transform\" />\r\n            <Folder />\r\n            {name}\r\n          </SidebarMenuButton>\r\n        </CollapsibleTrigger>\r\n        <CollapsibleContent>\r\n          <SidebarMenuSub>\r\n            {items.map((subItem, index) => (\r\n              <Tree key={index} item={subItem} />\r\n            ))}\r\n          </SidebarMenuSub>\r\n        </CollapsibleContent>\r\n      </Collapsible>\r\n    </SidebarMenuItem>\r\n  )\r\n}\r\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "sidebar",
    "dashboard"
  ]
}